<<<<<<< HEAD
[{"/Users/lucas/lighthouse/final-project-lhl/final-project/src/index.js":"1","/Users/lucas/lighthouse/final-project-lhl/final-project/src/App.js":"2","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Register.jsx":"3","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Footer.jsx":"4","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Login.jsx":"5","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Leaderboard.jsx":"6","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Profile.jsx":"7","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/WelcomePage.jsx":"8","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/GameConsole.jsx":"9","/Users/lucas/lighthouse/final-project-lhl/final-project/src/hooks/useApplicationData.js":"10","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/GameCompleteMsg.jsx":"11"},{"size":219,"mtime":1613241334563,"results":"12","hashOfConfig":"13"},{"size":3729,"mtime":1613499742196,"results":"14","hashOfConfig":"13"},{"size":5276,"mtime":1613486934771,"results":"15","hashOfConfig":"13"},{"size":1127,"mtime":1613398916150,"results":"16","hashOfConfig":"13"},{"size":2069,"mtime":1613486934767,"results":"17","hashOfConfig":"13"},{"size":4252,"mtime":1613439536335,"results":"18","hashOfConfig":"13"},{"size":2240,"mtime":1613439536337,"results":"19","hashOfConfig":"13"},{"size":1511,"mtime":1613499742203,"results":"20","hashOfConfig":"13"},{"size":5303,"mtime":1613499742198,"results":"21","hashOfConfig":"13"},{"size":2735,"mtime":1613486934773,"results":"22","hashOfConfig":"13"},{"size":458,"mtime":1613431638491,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"72v973",{"filePath":"27","messages":"28","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/lucas/lighthouse/final-project-lhl/final-project/src/index.js",[],["51","52"],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/App.js",["53","54","55","56","57","58","59","60","61"],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Register.jsx",["62"],"import React from 'react'\nimport { useState } from 'react'\nimport axios from 'axios'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport \"./Register.css\"\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport useApplicationData from '../hooks/useApplicationData';\n\nfunction Register() {\n\n  const [newUserDetails, setNewUserDetails] = useState({\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n    avatar: \"\",\n    city: \"\",\n    country: \"\"\n  });\n\n  // const registerUser = () => {\n  //   axios.post('http://localhost:3004/api/users', {\n  //     username: newUserDetails.username,\n  //     first_name: newUserDetails.first_name,\n  //     last_name: newUserDetails.last_name,\n  //     email: newUserDetails.email,\n  //     password: newUserDetails.password,\n  //     avatar: newUserDetails.avatar,\n  //     city: newUserDetails.city,\n  //     country: newUserDetails.country\n  //   })\n  //     .then(res => {\n  //       console.log(res);\n  //     })\n  // }\n\n  const registerUser = () => {\n    axios.post('/register', {\n      username: newUserDetails.username,\n      first_name: newUserDetails.first_name,\n      last_name: newUserDetails.last_name,\n      email: newUserDetails.email,\n      password: newUserDetails.password,\n      avatar: newUserDetails.avatar,\n      city: newUserDetails.city,\n      country: newUserDetails.country\n    })\n      .then(res => {\n        console.log(res);\n      })\n  }\n\n  return (\n    <div className=\"register\">\n      <Form>\n        <Form.Row>\n          <Form.Group as={Col} controlId=\"formGridFirstName\">\n            <Form.Label>First Name</Form.Label>\n            <Form.Control \n              type=\"firstname\" \n              placeholder=\"Enter First Name\"\n              onChange={e => {\n                setNewUserDetails({\n                  ...newUserDetails,\n                  first_name: e.target.value\n                })\n              }} \n              />\n          </Form.Group>\n\n          <Form.Group as={Col} controlId=\"formGridPassword\">\n            <Form.Label>Last Name</Form.Label>\n            <Form.Control \n              type=\"lastname\" \n              placeholder=\"Enter Last Name\"\n              onChange={e => {\n                setNewUserDetails({\n                  ...newUserDetails,\n                  last_name: e.target.value\n                })\n              }} \n            />\n          </Form.Group>\n        </Form.Row>\n\n        <Form.Row>\n        <Form.Group as={Col} controlId=\"formBasicUsername\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control \n            type=\"Username\" \n            placeholder=\"Enter Username\" \n            onChange={e => {\n              setNewUserDetails({\n                ...newUserDetails,\n                username: e.target.value\n              })\n            }}\n            />\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control \n            type=\"email\" \n            placeholder=\"Enter Email\" \n            onChange={e => {\n              setNewUserDetails({\n                ...newUserDetails,\n                email: e.target.value\n              })\n            }}\n            />\n        </Form.Group>\n        </Form.Row>\n\n        <Form.Row>\n        <Form.Group as={Col} controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control \n            type=\"password\" \n            placeholder=\"Password\" \n            onChange={e => {\n              setNewUserDetails({\n                ...newUserDetails,\n                password: e.target.value\n              })\n            }}\n            />\n          <Form.Text id=\"passwordHelpBlock\" muted>\n            Your password must be 8-20 characters long.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"formBasicConfirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Confirm Password\" />\n        </Form.Group>\n        </Form.Row>\n\n        <Form.Row>\n        <Form.Group as={Col} controlId=\"formBasicCity\">\n          <Form.Label>City</Form.Label>\n          <Form.Control \n            type=\"City\" \n            placeholder=\"Enter City\" \n            onChange={e => {\n              setNewUserDetails({\n                ...newUserDetails,\n                city: e.target.value\n              })\n            }}\n            />\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"formBasicCountry\">\n          <Form.Label>Country</Form.Label>\n          <Form.Control \n            type=\"Country\" \n            placeholder=\"Enter Country\" \n            onChange={e => {\n              setNewUserDetails({\n                ...newUserDetails,\n                country: e.target.value\n              })\n            }}\n            />\n        </Form.Group>\n        </Form.Row>\n\n        <Form.Group>\n          <Form.File id=\"exampleFormControlFile1\" label=\"Avatar\" />\n        </Form.Group>\n\n        <Button \n          variant=\"primary\" \n          type=\"submit\"\n          onClick = {registerUser}\n          >\n          Submit\n        </Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default Register","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Footer.jsx",[],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Login.jsx",[],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Leaderboard.jsx",["63","64","65"],"import React, { useState, useEffect, useMemo } from 'react'\nimport {Container, Table} from 'react-bootstrap';\nimport useApplicationData from \"../hooks/useApplicationData\"\nimport \"./Leaderboard.css\"\n\nfunction Leaderboard(props) {\n  \n  const { users, setUsers } = useApplicationData()\n\n  const [sortType, setSortType] = useState('levels');\n\n  const sortedUsers = useMemo(() => {\n    const sortArray = type => {\n      const types = {\n        wordsPerMin: 'words_per_min',\n        levels: 'highest_level_cleared',\n      };\n      const sortProperty = types[type];\n      const secondarySortProperty = types[type === 'levels' ? 'wordsPerMin' : 'levels']\n      const sorted = [...users].sort((a, b) => {\n        const initialDiff = b[sortProperty] - a[sortProperty]\n        if (initialDiff === 0) {\n          return b[secondarySortProperty] - a[secondarySortProperty]\n        } else {\n          return initialDiff;\n        }\n      });\n      return sorted;\n    };\n    return sortArray(sortType)\n  }, [users, sortType])\n\n\n\n  return (\n    <div className=\"leaderboard\">\n      <Container className=\"leadercontainer\">\n      <Table striped bordered hover variant=\"dark\">\n        <thead>\n          <tr>\n            <th colSpan=\"4\" classname=\"align-me\">Leaderboard</th>\n          </tr>\n          <tr>\n            <th>Ranking</th>\n            <th>Username</th>\n            <th>Highest Level</th>\n            <th>Words Per Minute</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>1st</td>\n            <td>{sortedUsers[0] && sortedUsers[0].username}</td>\n            <td>{sortedUsers[0] && sortedUsers[0].highest_level_cleared}</td>\n            <td>{sortedUsers[0] && sortedUsers[0].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>2nd</td>\n            <td>{sortedUsers[1] && sortedUsers[1].username}</td>\n            <td>{sortedUsers[1] && sortedUsers[1].highest_level_cleared}</td>\n            <td>{sortedUsers[1] && sortedUsers[1].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>3rd</td>\n            <td>{sortedUsers[2] && sortedUsers[2].username}</td>\n            <td>{sortedUsers[2] && sortedUsers[2].highest_level_cleared}</td>\n            <td>{sortedUsers[2] && sortedUsers[2].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>4th</td>\n            <td>{sortedUsers[3] && sortedUsers[3].username}</td>\n            <td>{sortedUsers[3] && sortedUsers[3].highest_level_cleared}</td>\n            <td>{sortedUsers[3] && sortedUsers[3].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>5th</td>\n            <td>{sortedUsers[4] && sortedUsers[4].username}</td>\n            <td>{sortedUsers[4] && sortedUsers[4].highest_level_cleared}</td>\n            <td>{sortedUsers[4] && sortedUsers[4].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>6th</td>\n            <td>{sortedUsers[5] && sortedUsers[5].username}</td>\n            <td>{sortedUsers[5] && sortedUsers[5].highest_level_cleared}</td>\n            <td>{sortedUsers[5] && sortedUsers[5].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>7th</td>\n            <td>{sortedUsers[6] && sortedUsers[6].username}</td>\n            <td>{sortedUsers[6] && sortedUsers[6].highest_level_cleared}</td>\n            <td>{sortedUsers[6] && sortedUsers[6].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>8th</td>\n            <td>{sortedUsers[7] && sortedUsers[7].username}</td>\n            <td>{sortedUsers[7] && sortedUsers[7].highest_level_cleared}</td>\n            <td>{sortedUsers[7] && sortedUsers[7].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>9th</td>\n            <td>{sortedUsers[8] && sortedUsers[8].username}</td>\n            <td>{sortedUsers[8] && sortedUsers[8].highest_level_cleared}</td>\n            <td>{sortedUsers[8] && sortedUsers[8].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>10th</td>\n            <td>{sortedUsers[9] && sortedUsers[9].username}</td>\n            <td>{sortedUsers[9] && sortedUsers[9].highest_level_cleared}</td>\n            <td>{sortedUsers[9] && sortedUsers[9].words_per_min}</td>\n          </tr>\n        </tbody>\n      </Table>\n      </Container>\n    </div>\n  )\n}\n\nexport default Leaderboard\n","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Profile.jsx",["66"],"import React from 'react';\nimport { Container, Row, Col, Image, Card, Button, ProgressBar } from 'react-bootstrap';\nimport \"./Profile.css\"\n\nfunction Profile() {\n  return (\n    <div className=\"profile\">\n      <Container>\n        <Row>\n          <Col>\n            <Card border=\"secondary\" style={{ width: '18rem' }}>\n              <Card.Img variant=\"top\" src=\"images/sample-avatar.jpg\" className=\"avatar\" />\n              <Card.Body>\n                <Card.Title>Bobby Bob</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">bobthebuilder99</Card.Subtitle>\n                <ProgressBar animated now={70} label=\"70%\" />\n                {/* <Card.Text><i class=\"fas fa-certificate\"></i> Veteran</Card.Text> */}\n                <Card.Text>\n                  <br/>\n                  <Card.Img variant=\"top\" src=\"images/medal-icon.png\" className= \"medal-icon\" />\n                  Veteran\n                </Card.Text>\n                <Card.Text>Highest Level Completed: 4</Card.Text>\n                <Card.Text>Average WPM: 97</Card.Text>\n                <Button variant=\"primary\" href=\"/leaderboard\">Global Leaderboard</Button>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n            <Row>\n              <Card style={{ width: '45rem' }} >\n                <Card.Header as=\"h5\">Edit Profile</Card.Header>\n                <Card.Body>\n                  <Card.Title>Special title treatment</Card.Title>\n                  <Card.Text>Change username</Card.Text>\n                  <Card.Text>Change location</Card.Text>\n                  <Button variant=\"primary\">Go somewhere</Button>\n                </Card.Body>\n              </Card>\n            </Row>\n            <br/>\n            <br/>\n            <Row>\n              <Card style={{ width: '45rem' }} >\n                <Card.Header as=\"h5\">Security</Card.Header>\n                <Card.Body>\n                  <Card.Title>Special title treatment</Card.Title>\n                  <Card.Text>Change password</Card.Text>\n                  <Button variant=\"primary\">Go somewhere</Button>\n                </Card.Body>\n              </Card>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default Profile\n","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/WelcomePage.jsx",[],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/GameConsole.jsx",["67","68","69","70"],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/hooks/useApplicationData.js",["71","72","73"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Prev } from \"react-bootstrap/esm/PageItem\";\n\nexport default function useApplicationData() {\n\n  // All States\n  const [levels, setLevels] = useState([]);\n  const [contents, setContents] = useState([]);\n  const [attempts, setAttempts] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [gameConsole, setGameConsole] = useState('');\n  const [userInput, setUserInput] = useState('');\n  // const [newUserDetails, setNewUserDetails] = useState({\n  //   username: \"\",\n  //   first_name: \"\",\n  //   last_name: \"\",\n  //   email: \"\",\n  //   password: \"\",\n  //   avatar: \"\",\n  //   city: \"\",\n  //   country: \"\"\n  // });\n  const [showLogin, setShowLogin] = useState(false);\n  const [showRegister, setShowRegister] = useState(false);\n\n  // All helper functions\n  const handleCloseLogin = () => setShowLogin(false);\n  const handleShowLogin = () => setShowLogin(true);\n  const handleCloseRegister = () => setShowRegister(false);\n  const handleShowRegister = () => setShowRegister(true);\n\n  // const registerUser = () => {\n  //   axios.post('http://localhost:3004/api/users', {\n  //     username: newUserDetails.username,\n  //     first_name: newUserDetails.first_name,\n  //     last_name: newUserDetails.last_name,\n  //     email: newUserDetails.email,\n  //     password: newUserDetails.password,\n  //     avatar: newUserDetails.avatar,\n  //     city: newUserDetails.city,\n  //     country: newUserDetails.country\n  //   })\n  //     .then(res => {\n  //       console.log(res);\n  //     })\n  // }\n\n  // const updateGameConsole = () => {\n  //   console.log(\"YO\")\n  //   setGameConsole(contents[0].content);\n  // }\n\n  // To update state from db on load\n  useEffect(() => {\n    Promise.all([\n      axios.get(\"http://localhost:3004/api/contents\"),\n      axios.get(\"http://localhost:3004/api/levels\"),\n      axios.get( \"http://localhost:3004/api/attempts\"),\n      axios.get(\"http://localhost:3004/api/users\"),\n    ])\n      .then(res => {\n        let contentsArray = res[0].data[\"contents\"];\n        let levelsArray = res[1].data[\"levels\"];\n        let attemptsArray = res[2].data[\"attempts\"];\n        let usersArray = res[3].data[\"users\"];\n        setContents(contentsArray);\n        setLevels(levelsArray);\n        setAttempts(attemptsArray);\n        setUsers(usersArray);\n      })\n      .catch((err) => console.log(err))\n  }, [])\n\n  return {\n    showLogin,\n    setShowLogin,\n    showRegister,\n    setShowRegister,\n    handleCloseLogin,\n    handleShowLogin,\n    handleCloseRegister,\n    handleShowRegister,\n    levels,\n    setLevels,\n    contents,\n    setContents,\n    attempts,\n    setAttempts,\n    users,\n    setUsers,\n    userInput,\n    setUserInput\n  };\n}","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/GameCompleteMsg.jsx",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"78","severity":1,"message":"82","line":15,"column":55,"nodeType":"80","messageId":"81","endLine":15,"endColumn":69},{"ruleId":"78","severity":1,"message":"83","line":24,"column":5,"nodeType":"80","messageId":"81","endLine":24,"endColumn":17},{"ruleId":"78","severity":1,"message":"84","line":26,"column":5,"nodeType":"80","messageId":"81","endLine":26,"endColumn":20},{"ruleId":"78","severity":1,"message":"85","line":32,"column":5,"nodeType":"80","messageId":"81","endLine":32,"endColumn":16},{"ruleId":"78","severity":1,"message":"86","line":33,"column":5,"nodeType":"80","messageId":"81","endLine":33,"endColumn":16},{"ruleId":"78","severity":1,"message":"87","line":34,"column":5,"nodeType":"80","messageId":"81","endLine":34,"endColumn":22},{"ruleId":"78","severity":1,"message":"88","line":35,"column":5,"nodeType":"80","messageId":"81","endLine":35,"endColumn":14},{"ruleId":"78","severity":1,"message":"89","line":36,"column":5,"nodeType":"80","messageId":"81","endLine":36,"endColumn":17},{"ruleId":"78","severity":1,"message":"90","line":10,"column":8,"nodeType":"80","messageId":"81","endLine":10,"endColumn":26},{"ruleId":"78","severity":1,"message":"91","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":36},{"ruleId":"78","severity":1,"message":"92","line":8,"column":18,"nodeType":"80","messageId":"81","endLine":8,"endColumn":26},{"ruleId":"78","severity":1,"message":"93","line":10,"column":20,"nodeType":"80","messageId":"81","endLine":10,"endColumn":31},{"ruleId":"78","severity":1,"message":"94","line":2,"column":31,"nodeType":"80","messageId":"81","endLine":2,"endColumn":36},{"ruleId":"78","severity":1,"message":"95","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":35},{"ruleId":"78","severity":1,"message":"90","line":6,"column":8,"nodeType":"80","messageId":"81","endLine":6,"endColumn":26},{"ruleId":"96","severity":1,"message":"97","line":55,"column":5,"nodeType":"98","endLine":55,"endColumn":26,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":89,"column":6,"nodeType":"98","endLine":89,"endColumn":28,"suggestions":"101"},{"ruleId":"78","severity":1,"message":"102","line":3,"column":10,"nodeType":"80","messageId":"81","endLine":3,"endColumn":14},{"ruleId":"78","severity":1,"message":"86","line":12,"column":10,"nodeType":"80","messageId":"81","endLine":12,"endColumn":21},{"ruleId":"78","severity":1,"message":"103","line":12,"column":23,"nodeType":"80","messageId":"81","endLine":12,"endColumn":37},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'DropdownButton' is defined but never used.","'setShowLogin' is assigned a value but never used.","'setShowRegister' is assigned a value but never used.","'setContents' is assigned a value but never used.","'gameConsole' is assigned a value but never used.","'updateGameConsole' is assigned a value but never used.","'userInput' is assigned a value but never used.","'setUserInput' is assigned a value but never used.","'useApplicationData' is defined but never used.","'useEffect' is defined but never used.","'setUsers' is assigned a value but never used.","'setSortType' is assigned a value but never used.","'Image' is defined but never used.","'setState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentLevel', 'props.contents', and 'typingIn'. Either include them or remove the dependency array.","ArrayExpression",["106"],"React Hook useEffect has missing dependencies: 'currentLevel', 'props.contents', and 'seconds'. Either include them or remove the dependency array. You can also do a functional update 'setCurrentLevel(c => ...)' if you only need 'currentLevel' in the 'setCurrentLevel' call.",["107"],"'Prev' is defined but never used.","'setGameConsole' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [seconds, intervalId, props.contents, currentLevel, typingIn]",{"range":"112","text":"113"},"Update the dependencies array to be: [typingIn, intervalId, props.contents, currentLevel, seconds]",{"range":"114","text":"115"},[1731,1752],"[seconds, intervalId, props.contents, currentLevel, typingIn]",[2690,2712],"[typingIn, intervalId, props.contents, currentLevel, seconds]"]
=======
[{"/Users/saadkureshi/lighthouse/final-project-bootcamp/final-project/src/index.js":"1","/Users/saadkureshi/lighthouse/final-project-bootcamp/final-project/src/App.js":"2","/Users/saadkureshi/lighthouse/final-project-bootcamp/final-project/src/components/Register.jsx":"3","/Users/saadkureshi/lighthouse/final-project-bootcamp/final-project/src/components/Footer.jsx":"4","/Users/saadkureshi/lighthouse/final-project-bootcamp/final-project/src/components/Login.jsx":"5","/Users/saadkureshi/lighthouse/final-project-bootcamp/final-project/src/components/Leaderboard.jsx":"6","/Users/saadkureshi/lighthouse/final-project-bootcamp/final-project/src/components/Profile.jsx":"7","/Users/saadkureshi/lighthouse/final-project-bootcamp/final-project/src/components/WelcomePage.jsx":"8","/Users/saadkureshi/lighthouse/final-project-bootcamp/final-project/src/components/GameConsole.jsx":"9","/Users/saadkureshi/lighthouse/final-project-bootcamp/final-project/src/hooks/useApplicationData.js":"10","/Users/saadkureshi/lighthouse/final-project-bootcamp/final-project/src/components/GameCompleteMsg.jsx":"11"},{"size":219,"mtime":1613183293159,"results":"12","hashOfConfig":"13"},{"size":3729,"mtime":1613499557729,"results":"14","hashOfConfig":"13"},{"size":5276,"mtime":1613449663680,"results":"15","hashOfConfig":"13"},{"size":1127,"mtime":1613345032941,"results":"16","hashOfConfig":"13"},{"size":2069,"mtime":1613499474513,"results":"17","hashOfConfig":"13"},{"size":4252,"mtime":1613440917273,"results":"18","hashOfConfig":"13"},{"size":2240,"mtime":1613440917275,"results":"19","hashOfConfig":"13"},{"size":1511,"mtime":1613499557733,"results":"20","hashOfConfig":"13"},{"size":5303,"mtime":1613499557731,"results":"21","hashOfConfig":"13"},{"size":2735,"mtime":1613499474521,"results":"22","hashOfConfig":"13"},{"size":458,"mtime":1613429276610,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1kac59u",{"filePath":"27","messages":"28","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/saadkureshi/lighthouse/final-project-bootcamp/final-project/src/index.js",[],["51","52"],"/Users/saadkureshi/lighthouse/final-project-bootcamp/final-project/src/App.js",["53","54","55","56","57","58","59","60","61"],"/Users/saadkureshi/lighthouse/final-project-bootcamp/final-project/src/components/Register.jsx",["62"],"import React from 'react'\nimport { useState } from 'react'\nimport axios from 'axios'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport \"./Register.css\"\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport useApplicationData from '../hooks/useApplicationData';\n\nfunction Register() {\n\n  const [newUserDetails, setNewUserDetails] = useState({\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n    avatar: \"\",\n    city: \"\",\n    country: \"\"\n  });\n\n  // const registerUser = () => {\n  //   axios.post('http://localhost:3004/api/users', {\n  //     username: newUserDetails.username,\n  //     first_name: newUserDetails.first_name,\n  //     last_name: newUserDetails.last_name,\n  //     email: newUserDetails.email,\n  //     password: newUserDetails.password,\n  //     avatar: newUserDetails.avatar,\n  //     city: newUserDetails.city,\n  //     country: newUserDetails.country\n  //   })\n  //     .then(res => {\n  //       console.log(res);\n  //     })\n  // }\n\n  const registerUser = () => {\n    axios.post('/register', {\n      username: newUserDetails.username,\n      first_name: newUserDetails.first_name,\n      last_name: newUserDetails.last_name,\n      email: newUserDetails.email,\n      password: newUserDetails.password,\n      avatar: newUserDetails.avatar,\n      city: newUserDetails.city,\n      country: newUserDetails.country\n    })\n      .then(res => {\n        console.log(res);\n      })\n  }\n\n  return (\n    <div className=\"register\">\n      <Form>\n        <Form.Row>\n          <Form.Group as={Col} controlId=\"formGridFirstName\">\n            <Form.Label>First Name</Form.Label>\n            <Form.Control \n              type=\"firstname\" \n              placeholder=\"Enter First Name\"\n              onChange={e => {\n                setNewUserDetails({\n                  ...newUserDetails,\n                  first_name: e.target.value\n                })\n              }} \n              />\n          </Form.Group>\n\n          <Form.Group as={Col} controlId=\"formGridPassword\">\n            <Form.Label>Last Name</Form.Label>\n            <Form.Control \n              type=\"lastname\" \n              placeholder=\"Enter Last Name\"\n              onChange={e => {\n                setNewUserDetails({\n                  ...newUserDetails,\n                  last_name: e.target.value\n                })\n              }} \n            />\n          </Form.Group>\n        </Form.Row>\n\n        <Form.Row>\n        <Form.Group as={Col} controlId=\"formBasicUsername\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control \n            type=\"Username\" \n            placeholder=\"Enter Username\" \n            onChange={e => {\n              setNewUserDetails({\n                ...newUserDetails,\n                username: e.target.value\n              })\n            }}\n            />\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control \n            type=\"email\" \n            placeholder=\"Enter Email\" \n            onChange={e => {\n              setNewUserDetails({\n                ...newUserDetails,\n                email: e.target.value\n              })\n            }}\n            />\n        </Form.Group>\n        </Form.Row>\n\n        <Form.Row>\n        <Form.Group as={Col} controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control \n            type=\"password\" \n            placeholder=\"Password\" \n            onChange={e => {\n              setNewUserDetails({\n                ...newUserDetails,\n                password: e.target.value\n              })\n            }}\n            />\n          <Form.Text id=\"passwordHelpBlock\" muted>\n            Your password must be 8-20 characters long.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"formBasicConfirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Confirm Password\" />\n        </Form.Group>\n        </Form.Row>\n\n        <Form.Row>\n        <Form.Group as={Col} controlId=\"formBasicCity\">\n          <Form.Label>City</Form.Label>\n          <Form.Control \n            type=\"City\" \n            placeholder=\"Enter City\" \n            onChange={e => {\n              setNewUserDetails({\n                ...newUserDetails,\n                city: e.target.value\n              })\n            }}\n            />\n        </Form.Group>\n\n        <Form.Group as={Col} controlId=\"formBasicCountry\">\n          <Form.Label>Country</Form.Label>\n          <Form.Control \n            type=\"Country\" \n            placeholder=\"Enter Country\" \n            onChange={e => {\n              setNewUserDetails({\n                ...newUserDetails,\n                country: e.target.value\n              })\n            }}\n            />\n        </Form.Group>\n        </Form.Row>\n\n        <Form.Group>\n          <Form.File id=\"exampleFormControlFile1\" label=\"Avatar\" />\n        </Form.Group>\n\n        <Button \n          variant=\"primary\" \n          type=\"submit\"\n          onClick = {registerUser}\n          >\n          Submit\n        </Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default Register","/Users/saadkureshi/lighthouse/final-project-bootcamp/final-project/src/components/Footer.jsx",[],"/Users/saadkureshi/lighthouse/final-project-bootcamp/final-project/src/components/Login.jsx",[],"/Users/saadkureshi/lighthouse/final-project-bootcamp/final-project/src/components/Leaderboard.jsx",["63","64","65"],"import React, { useState, useEffect, useMemo } from 'react'\nimport {Container, Table} from 'react-bootstrap';\nimport useApplicationData from \"../hooks/useApplicationData\"\nimport \"./Leaderboard.css\"\n\nfunction Leaderboard(props) {\n  \n  const { users, setUsers } = useApplicationData()\n\n  const [sortType, setSortType] = useState('levels');\n\n  const sortedUsers = useMemo(() => {\n    const sortArray = type => {\n      const types = {\n        wordsPerMin: 'words_per_min',\n        levels: 'highest_level_cleared',\n      };\n      const sortProperty = types[type];\n      const secondarySortProperty = types[type === 'levels' ? 'wordsPerMin' : 'levels']\n      const sorted = [...users].sort((a, b) => {\n        const initialDiff = b[sortProperty] - a[sortProperty]\n        if (initialDiff === 0) {\n          return b[secondarySortProperty] - a[secondarySortProperty]\n        } else {\n          return initialDiff;\n        }\n      });\n      return sorted;\n    };\n    return sortArray(sortType)\n  }, [users, sortType])\n\n\n\n  return (\n    <div className=\"leaderboard\">\n      <Container className=\"leadercontainer\">\n      <Table striped bordered hover variant=\"dark\">\n        <thead>\n          <tr>\n            <th colSpan=\"4\" classname=\"align-me\">Leaderboard</th>\n          </tr>\n          <tr>\n            <th>Ranking</th>\n            <th>Username</th>\n            <th>Highest Level</th>\n            <th>Words Per Minute</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>1st</td>\n            <td>{sortedUsers[0] && sortedUsers[0].username}</td>\n            <td>{sortedUsers[0] && sortedUsers[0].highest_level_cleared}</td>\n            <td>{sortedUsers[0] && sortedUsers[0].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>2nd</td>\n            <td>{sortedUsers[1] && sortedUsers[1].username}</td>\n            <td>{sortedUsers[1] && sortedUsers[1].highest_level_cleared}</td>\n            <td>{sortedUsers[1] && sortedUsers[1].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>3rd</td>\n            <td>{sortedUsers[2] && sortedUsers[2].username}</td>\n            <td>{sortedUsers[2] && sortedUsers[2].highest_level_cleared}</td>\n            <td>{sortedUsers[2] && sortedUsers[2].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>4th</td>\n            <td>{sortedUsers[3] && sortedUsers[3].username}</td>\n            <td>{sortedUsers[3] && sortedUsers[3].highest_level_cleared}</td>\n            <td>{sortedUsers[3] && sortedUsers[3].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>5th</td>\n            <td>{sortedUsers[4] && sortedUsers[4].username}</td>\n            <td>{sortedUsers[4] && sortedUsers[4].highest_level_cleared}</td>\n            <td>{sortedUsers[4] && sortedUsers[4].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>6th</td>\n            <td>{sortedUsers[5] && sortedUsers[5].username}</td>\n            <td>{sortedUsers[5] && sortedUsers[5].highest_level_cleared}</td>\n            <td>{sortedUsers[5] && sortedUsers[5].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>7th</td>\n            <td>{sortedUsers[6] && sortedUsers[6].username}</td>\n            <td>{sortedUsers[6] && sortedUsers[6].highest_level_cleared}</td>\n            <td>{sortedUsers[6] && sortedUsers[6].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>8th</td>\n            <td>{sortedUsers[7] && sortedUsers[7].username}</td>\n            <td>{sortedUsers[7] && sortedUsers[7].highest_level_cleared}</td>\n            <td>{sortedUsers[7] && sortedUsers[7].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>9th</td>\n            <td>{sortedUsers[8] && sortedUsers[8].username}</td>\n            <td>{sortedUsers[8] && sortedUsers[8].highest_level_cleared}</td>\n            <td>{sortedUsers[8] && sortedUsers[8].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>10th</td>\n            <td>{sortedUsers[9] && sortedUsers[9].username}</td>\n            <td>{sortedUsers[9] && sortedUsers[9].highest_level_cleared}</td>\n            <td>{sortedUsers[9] && sortedUsers[9].words_per_min}</td>\n          </tr>\n        </tbody>\n      </Table>\n      </Container>\n    </div>\n  )\n}\n\nexport default Leaderboard\n","/Users/saadkureshi/lighthouse/final-project-bootcamp/final-project/src/components/Profile.jsx",["66"],"import React from 'react';\nimport { Container, Row, Col, Image, Card, Button, ProgressBar } from 'react-bootstrap';\nimport \"./Profile.css\"\n\nfunction Profile() {\n  return (\n    <div className=\"profile\">\n      <Container>\n        <Row>\n          <Col>\n            <Card border=\"secondary\" style={{ width: '18rem' }}>\n              <Card.Img variant=\"top\" src=\"images/sample-avatar.jpg\" className=\"avatar\" />\n              <Card.Body>\n                <Card.Title>Bobby Bob</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">bobthebuilder99</Card.Subtitle>\n                <ProgressBar animated now={70} label=\"70%\" />\n                {/* <Card.Text><i class=\"fas fa-certificate\"></i> Veteran</Card.Text> */}\n                <Card.Text>\n                  <br/>\n                  <Card.Img variant=\"top\" src=\"images/medal-icon.png\" className= \"medal-icon\" />\n                  Veteran\n                </Card.Text>\n                <Card.Text>Highest Level Completed: 4</Card.Text>\n                <Card.Text>Average WPM: 97</Card.Text>\n                <Button variant=\"primary\" href=\"/leaderboard\">Global Leaderboard</Button>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n            <Row>\n              <Card style={{ width: '45rem' }} >\n                <Card.Header as=\"h5\">Edit Profile</Card.Header>\n                <Card.Body>\n                  <Card.Title>Special title treatment</Card.Title>\n                  <Card.Text>Change username</Card.Text>\n                  <Card.Text>Change location</Card.Text>\n                  <Button variant=\"primary\">Go somewhere</Button>\n                </Card.Body>\n              </Card>\n            </Row>\n            <br/>\n            <br/>\n            <Row>\n              <Card style={{ width: '45rem' }} >\n                <Card.Header as=\"h5\">Security</Card.Header>\n                <Card.Body>\n                  <Card.Title>Special title treatment</Card.Title>\n                  <Card.Text>Change password</Card.Text>\n                  <Button variant=\"primary\">Go somewhere</Button>\n                </Card.Body>\n              </Card>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default Profile\n","/Users/saadkureshi/lighthouse/final-project-bootcamp/final-project/src/components/WelcomePage.jsx",[],"/Users/saadkureshi/lighthouse/final-project-bootcamp/final-project/src/components/GameConsole.jsx",["67","68","69","70"],"/Users/saadkureshi/lighthouse/final-project-bootcamp/final-project/src/hooks/useApplicationData.js",["71","72","73"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Prev } from \"react-bootstrap/esm/PageItem\";\n\nexport default function useApplicationData() {\n\n  // All States\n  const [levels, setLevels] = useState([]);\n  const [contents, setContents] = useState([]);\n  const [attempts, setAttempts] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [gameConsole, setGameConsole] = useState('');\n  const [userInput, setUserInput] = useState('');\n  // const [newUserDetails, setNewUserDetails] = useState({\n  //   username: \"\",\n  //   first_name: \"\",\n  //   last_name: \"\",\n  //   email: \"\",\n  //   password: \"\",\n  //   avatar: \"\",\n  //   city: \"\",\n  //   country: \"\"\n  // });\n  const [showLogin, setShowLogin] = useState(false);\n  const [showRegister, setShowRegister] = useState(false);\n\n  // All helper functions\n  const handleCloseLogin = () => setShowLogin(false);\n  const handleShowLogin = () => setShowLogin(true);\n  const handleCloseRegister = () => setShowRegister(false);\n  const handleShowRegister = () => setShowRegister(true);\n\n  // const registerUser = () => {\n  //   axios.post('http://localhost:3004/api/users', {\n  //     username: newUserDetails.username,\n  //     first_name: newUserDetails.first_name,\n  //     last_name: newUserDetails.last_name,\n  //     email: newUserDetails.email,\n  //     password: newUserDetails.password,\n  //     avatar: newUserDetails.avatar,\n  //     city: newUserDetails.city,\n  //     country: newUserDetails.country\n  //   })\n  //     .then(res => {\n  //       console.log(res);\n  //     })\n  // }\n\n  // const updateGameConsole = () => {\n  //   console.log(\"YO\")\n  //   setGameConsole(contents[0].content);\n  // }\n\n  // To update state from db on load\n  useEffect(() => {\n    Promise.all([\n      axios.get(\"http://localhost:3004/api/contents\"),\n      axios.get(\"http://localhost:3004/api/levels\"),\n      axios.get( \"http://localhost:3004/api/attempts\"),\n      axios.get(\"http://localhost:3004/api/users\"),\n    ])\n      .then(res => {\n        let contentsArray = res[0].data[\"contents\"];\n        let levelsArray = res[1].data[\"levels\"];\n        let attemptsArray = res[2].data[\"attempts\"];\n        let usersArray = res[3].data[\"users\"];\n        setContents(contentsArray);\n        setLevels(levelsArray);\n        setAttempts(attemptsArray);\n        setUsers(usersArray);\n      })\n      .catch((err) => console.log(err))\n  }, [])\n\n  return {\n    showLogin,\n    setShowLogin,\n    showRegister,\n    setShowRegister,\n    handleCloseLogin,\n    handleShowLogin,\n    handleCloseRegister,\n    handleShowRegister,\n    levels,\n    setLevels,\n    contents,\n    setContents,\n    attempts,\n    setAttempts,\n    users,\n    setUsers,\n    userInput,\n    setUserInput\n  };\n}","/Users/saadkureshi/lighthouse/final-project-bootcamp/final-project/src/components/GameCompleteMsg.jsx",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"78","severity":1,"message":"82","line":15,"column":55,"nodeType":"80","messageId":"81","endLine":15,"endColumn":69},{"ruleId":"78","severity":1,"message":"83","line":24,"column":5,"nodeType":"80","messageId":"81","endLine":24,"endColumn":17},{"ruleId":"78","severity":1,"message":"84","line":26,"column":5,"nodeType":"80","messageId":"81","endLine":26,"endColumn":20},{"ruleId":"78","severity":1,"message":"85","line":32,"column":5,"nodeType":"80","messageId":"81","endLine":32,"endColumn":16},{"ruleId":"78","severity":1,"message":"86","line":33,"column":5,"nodeType":"80","messageId":"81","endLine":33,"endColumn":16},{"ruleId":"78","severity":1,"message":"87","line":34,"column":5,"nodeType":"80","messageId":"81","endLine":34,"endColumn":22},{"ruleId":"78","severity":1,"message":"88","line":35,"column":5,"nodeType":"80","messageId":"81","endLine":35,"endColumn":14},{"ruleId":"78","severity":1,"message":"89","line":36,"column":5,"nodeType":"80","messageId":"81","endLine":36,"endColumn":17},{"ruleId":"78","severity":1,"message":"90","line":10,"column":8,"nodeType":"80","messageId":"81","endLine":10,"endColumn":26},{"ruleId":"78","severity":1,"message":"91","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":36},{"ruleId":"78","severity":1,"message":"92","line":8,"column":18,"nodeType":"80","messageId":"81","endLine":8,"endColumn":26},{"ruleId":"78","severity":1,"message":"93","line":10,"column":20,"nodeType":"80","messageId":"81","endLine":10,"endColumn":31},{"ruleId":"78","severity":1,"message":"94","line":2,"column":31,"nodeType":"80","messageId":"81","endLine":2,"endColumn":36},{"ruleId":"78","severity":1,"message":"95","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":35},{"ruleId":"78","severity":1,"message":"90","line":6,"column":8,"nodeType":"80","messageId":"81","endLine":6,"endColumn":26},{"ruleId":"96","severity":1,"message":"97","line":55,"column":5,"nodeType":"98","endLine":55,"endColumn":26,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":89,"column":6,"nodeType":"98","endLine":89,"endColumn":28,"suggestions":"101"},{"ruleId":"78","severity":1,"message":"102","line":3,"column":10,"nodeType":"80","messageId":"81","endLine":3,"endColumn":14},{"ruleId":"78","severity":1,"message":"86","line":12,"column":10,"nodeType":"80","messageId":"81","endLine":12,"endColumn":21},{"ruleId":"78","severity":1,"message":"103","line":12,"column":23,"nodeType":"80","messageId":"81","endLine":12,"endColumn":37},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'DropdownButton' is defined but never used.","'setShowLogin' is assigned a value but never used.","'setShowRegister' is assigned a value but never used.","'setContents' is assigned a value but never used.","'gameConsole' is assigned a value but never used.","'updateGameConsole' is assigned a value but never used.","'userInput' is assigned a value but never used.","'setUserInput' is assigned a value but never used.","'useApplicationData' is defined but never used.","'useEffect' is defined but never used.","'setUsers' is assigned a value but never used.","'setSortType' is assigned a value but never used.","'Image' is defined but never used.","'setState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentLevel', 'props.contents', and 'typingIn'. Either include them or remove the dependency array.","ArrayExpression",["106"],"React Hook useEffect has missing dependencies: 'currentLevel', 'props.contents', and 'seconds'. Either include them or remove the dependency array. You can also do a functional update 'setCurrentLevel(c => ...)' if you only need 'currentLevel' in the 'setCurrentLevel' call.",["107"],"'Prev' is defined but never used.","'setGameConsole' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [seconds, intervalId, props.contents, currentLevel, typingIn]",{"range":"112","text":"113"},"Update the dependencies array to be: [typingIn, intervalId, props.contents, currentLevel, seconds]",{"range":"114","text":"115"},[1731,1752],"[seconds, intervalId, props.contents, currentLevel, typingIn]",[2690,2712],"[typingIn, intervalId, props.contents, currentLevel, seconds]"]
>>>>>>> 79f97183a781acd7a325846f20f7ffc7a66f79d1
