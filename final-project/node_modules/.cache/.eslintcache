[{"/Users/lucas/lighthouse/final-project-lhl/final-project/src/index.js":"1","/Users/lucas/lighthouse/final-project-lhl/final-project/src/App.js":"2","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Register.jsx":"3","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Footer.jsx":"4","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Login.jsx":"5","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Leaderboard.jsx":"6","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Profile.jsx":"7","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/WelcomePage.jsx":"8","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/GameConsole.jsx":"9","/Users/lucas/lighthouse/final-project-lhl/final-project/src/hooks/useApplicationData.js":"10","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/GameCompleteMsg.jsx":"11","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/NavbarTC.jsx":"12","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Attempts.jsx":"13","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Chat.jsx":"14","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/TextContainer.jsx":"15","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Messages.jsx":"16","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Input.jsx":"17","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Message.jsx":"18","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/InfoBar.jsx":"19","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/PlayerMap.jsx":"20"},{"size":219,"mtime":1613241334563,"results":"21","hashOfConfig":"22"},{"size":1261,"mtime":1613749852490,"results":"23","hashOfConfig":"22"},{"size":4972,"mtime":1613525334304,"results":"24","hashOfConfig":"22"},{"size":1205,"mtime":1613661486090,"results":"25","hashOfConfig":"22"},{"size":2064,"mtime":1613661486093,"results":"26","hashOfConfig":"22"},{"size":4350,"mtime":1613749852768,"results":"27","hashOfConfig":"22"},{"size":5730,"mtime":1613747302688,"results":"28","hashOfConfig":"22"},{"size":1297,"mtime":1613749852778,"results":"29","hashOfConfig":"22"},{"size":10625,"mtime":1613755411209,"results":"30","hashOfConfig":"22"},{"size":1374,"mtime":1613683707067,"results":"31","hashOfConfig":"22"},{"size":459,"mtime":1613525334296,"results":"32","hashOfConfig":"22"},{"size":3290,"mtime":1613685309132,"results":"33","hashOfConfig":"22"},{"size":5860,"mtime":1613661486087,"results":"34","hashOfConfig":"22"},{"size":1859,"mtime":1613749852687,"results":"35","hashOfConfig":"22"},{"size":1168,"mtime":1613749852775,"results":"36","hashOfConfig":"22"},{"size":430,"mtime":1613661486094,"results":"37","hashOfConfig":"22"},{"size":508,"mtime":1613661486091,"results":"38","hashOfConfig":"22"},{"size":1014,"mtime":1613682837711,"results":"39","hashOfConfig":"22"},{"size":454,"mtime":1613682837710,"results":"40","hashOfConfig":"22"},{"size":2763,"mtime":1613749852769,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"72v973",{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},"/Users/lucas/lighthouse/final-project-lhl/final-project/src/index.js",[],["90","91"],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/App.js",["92","93","94","95","96","97","98"],"import React, { useState } from 'react';\nimport useApplicationData from \"./hooks/useApplicationData\"\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n// Import Components\nimport Footer from \"./components/Footer.jsx\";\nimport Leaderboard from \"./components/Leaderboard.jsx\";\nimport Profile from \"./components/Profile.jsx\";\nimport Welcomepage from \"./components/WelcomePage.jsx\";\nimport GameConsole from \"./components/GameConsole.jsx\";\nimport NavbarTC from \"./components/NavbarTC.jsx\";\n\n// Import stylesheets\nimport './App.css';\n\nfunction App() {\n\n  const {\n    contents,\n    setContents,\n    gameConsole,\n    updateGameConsole,\n    userInput,\n    setUserInput\n  } = useApplicationData();\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <NavbarTC />\n        <Switch>\n          <Route path=\"/leaderboard\">\n            <Leaderboard />\n          </Route>\n          <Route path=\"/profile\">\n            <Profile />\n          </Route>\n          <Route path=\"/play\">\n            <GameConsole\n              contents={contents}\n            />\n          </Route>\n          <Route path=\"/\">\n            <Welcomepage />\n          </Route>\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Register.jsx",[],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Footer.jsx",[],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Login.jsx",[],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Leaderboard.jsx",["99","100"],"import React, { useState, useMemo } from 'react'\nimport {Container, Table} from 'react-bootstrap';\nimport useApplicationData from \"../hooks/useApplicationData\"\nimport Map from \"./PlayerMap\";\nimport \"./Leaderboard.css\"\n\nfunction Leaderboard() {\n  \n  const { users, setUsers } = useApplicationData()\n\n  const [sortType, setSortType] = useState('levels');\n\n  const sortedUsers = useMemo(() => {\n    const sortArray = type => {\n      const types = {\n        wordsPerMin: 'words_per_min',\n        levels: 'highest_level_cleared',\n      };\n      const sortProperty = types[type];\n      const secondarySortProperty = types[type === 'levels' ? 'wordsPerMin' : 'levels']\n      const sorted = [...users].sort((a, b) => {\n        const initialDiff = b[sortProperty] - a[sortProperty]\n        if (initialDiff === 0) {\n          return b[secondarySortProperty] - a[secondarySortProperty]\n        } else {\n          return initialDiff;\n        }\n      });\n      return sorted;\n    };\n    return sortArray(sortType)\n  }, [users, sortType])\n\n\n\n  return (\n    <div className=\"leaderboard\">\n      <Container className=\"leadercontainer\">\n      <Table striped bordered hover variant=\"dark\">\n        <thead>\n          <tr>\n            <th colSpan=\"4\" classname=\"align-me\">Leaderboard</th>\n          </tr>\n          <tr>\n            <th>Ranking</th>\n            <th>Username</th>\n            <th>Highest Level</th>\n            <th>Words Per Minute</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>1st</td>\n            <td>@{sortedUsers[0] && sortedUsers[0].username}</td>\n            <td>{sortedUsers[0] && sortedUsers[0].highest_level_cleared}</td>\n            <td>{sortedUsers[0] && sortedUsers[0].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>2nd</td>\n            <td>@{sortedUsers[1] && sortedUsers[1].username}</td>\n            <td>{sortedUsers[1] && sortedUsers[1].highest_level_cleared}</td>\n            <td>{sortedUsers[1] && sortedUsers[1].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>3rd</td>\n            <td>@{sortedUsers[2] && sortedUsers[2].username}</td>\n            <td>{sortedUsers[2] && sortedUsers[2].highest_level_cleared}</td>\n            <td>{sortedUsers[2] && sortedUsers[2].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>4th</td>\n            <td>@{sortedUsers[3] && sortedUsers[3].username}</td>\n            <td>{sortedUsers[3] && sortedUsers[3].highest_level_cleared}</td>\n            <td>{sortedUsers[3] && sortedUsers[3].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>5th</td>\n            <td>@{sortedUsers[4] && sortedUsers[4].username}</td>\n            <td>{sortedUsers[4] && sortedUsers[4].highest_level_cleared}</td>\n            <td>{sortedUsers[4] && sortedUsers[4].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>6th</td>\n            <td>@{sortedUsers[5] && sortedUsers[5].username}</td>\n            <td>{sortedUsers[5] && sortedUsers[5].highest_level_cleared}</td>\n            <td>{sortedUsers[5] && sortedUsers[5].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>7th</td>\n            <td>@{sortedUsers[6] && sortedUsers[6].username}</td>\n            <td>{sortedUsers[6] && sortedUsers[6].highest_level_cleared}</td>\n            <td>{sortedUsers[6] && sortedUsers[6].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>8th</td>\n            <td>@{sortedUsers[7] && sortedUsers[7].username}</td>\n            <td>{sortedUsers[7] && sortedUsers[7].highest_level_cleared}</td>\n            <td>{sortedUsers[7] && sortedUsers[7].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>9th</td>\n            <td>@{sortedUsers[8] && sortedUsers[8].username}</td>\n            <td>{sortedUsers[8] && sortedUsers[8].highest_level_cleared}</td>\n            <td>{sortedUsers[8] && sortedUsers[8].words_per_min}</td>\n          </tr>\n          <tr>\n            <td>10th</td>\n            <td>@{sortedUsers[9] && sortedUsers[9].username}</td>\n            <td>{sortedUsers[9] && sortedUsers[9].highest_level_cleared}</td>\n            <td>{sortedUsers[9] && sortedUsers[9].words_per_min}</td>\n          </tr>\n        </tbody>\n      </Table>\n      </Container>\n      <Container className=\"googleMap\">\n      <Map />\n      </Container>\n    </div>\n  )\n}\n\nexport default Leaderboard\n","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Profile.jsx",["101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117"],"import React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Card, Button, ProgressBar } from 'react-bootstrap';\nimport Attempts from \"./Attempts\";\nimport \"./Profile.css\";\nimport axios from \"axios\";\nimport useApplicationData from \"../hooks/useApplicationData\";\n\nfunction Profile() {\n\n  const [wpm, setWpm] = useState(0);\n  const [highest, setHighest] = useState(0);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:3004/api/users\", {   \n    })\n    .then(res => {\n      for (let user of res.data['users']){\n        if (user.id === JSON.parse(localStorage.getItem(\"user_details\")).id){\n          setWpm(user.words_per_min)\n          setHighest(user.highest_level_cleared)\n        }\n      }\n    })\n  }, [])\n\n  const roundTo = require('round-to');\n\n  const userGameStatus = (((localStorage.getItem(\"user_details\") && JSON.parse(localStorage.getItem(\"user_details\")).highest_level_cleared) / 12) * 100)\n\n  return (\n    <div className=\"profile\">\n      <Container>\n        <Row>\n          <Col>\n            <Card border=\"secondary\" style={{ width: '18rem' }}>\n              <Card.Img variant=\"top\" src=\"images/sample-avatar.jpg\" className=\"avatar\" />\n              <Card.Body>\n                <Card.Title className=\"profileName\">{localStorage.getItem(\"user_details\") && JSON.parse(localStorage.getItem(\"user_details\")).first_name} {localStorage.getItem(\"user_details\") && JSON.parse(localStorage.getItem(\"user_details\")).last_name}</Card.Title>\n                <Card.Subtitle className=\"profileUserName text-muted\">@{localStorage.getItem(\"user_details\") && JSON.parse(localStorage.getItem(\"user_details\")).username}</Card.Subtitle>\n                <ProgressBar animated aria-valuemin=\"0\" aria-valuemax=\"100\" now={highest * 8.4} label={roundTo(highest * 8.4, 0) + \"%\"} />\n                {userGameStatus == 100 ?\n                  <Card.Text className=\"medalCard\">\n                    <br />\n                    <Card.Img className=\"medal-icon\" variant=\"top\" src=\"images/rookiemedal.png\" className=\"medal-icon\" />\n                    <Card.Img className=\"medal-icon\" variant=\"top\" src=\"images/3medal.png\" className=\"medal-icon\" />\n                    <Card.Img className=\"medal-icon\" variant=\"top\" src=\"images/2medal.png\" className=\"medal-icon\" />\n                    <Card.Img className=\"medal-icon\" variant=\"top\" src=\"images/1medal.png\" className=\"medal-icon\" />\n                    <Card.Img className=\"medal-icon\" variant=\"top\" src=\"images/3startrophy.png\" className=\"medal-icon\" />\n                    <br />\n                    <strong className=\"progressTitle\">Master</strong>\n                  </Card.Text>\n                  : userGameStatus > 75 ?\n                    <Card.Text className=\"medalCard\">\n                      <br />\n                      <Card.Img className=\"medal-icon\" variant=\"top\" src=\"images/rookiemedal.png\" className=\"medal-icon\" />\n                      <Card.Img className=\"medal-icon\" variant=\"top\" src=\"images/3medal.png\" className=\"medal-icon\" />\n                      <Card.Img className=\"medal-icon\" variant=\"top\" src=\"images/2medal.png\" className=\"medal-icon\" />\n                      <Card.Img className=\"medal-icon\" variant=\"top\" src=\"images/1medal.png\" className=\"medal-icon\" />\n                      <br />\n                      <strong className=\"progressTitle\">Veteran</strong>\n                    </Card.Text>\n                    : userGameStatus > 50 ?\n                      <Card.Text className=\"medalCard\">\n                        <br />\n                        <Card.Img className=\"medal-icon\" variant=\"top\" src=\"images/rookiemedal.png\" className=\"medal-icon\" />\n                        <Card.Img className=\"medal-icon\" variant=\"top\" src=\"images/3medal.png\" className=\"medal-icon\" />\n                        <Card.Img className=\"medal-icon\" variant=\"top\" src=\"images/2medal.png\" className=\"medal-icon\" />\n                        <br />\n                        <strong className=\"progressTitle\">Experienced</strong>\n                      </Card.Text>\n                      : userGameStatus > 25 ?\n                        <Card.Text className=\"medalCard\">\n                          <br />\n                          <Card.Img className=\"medal-icon\" variant=\"top\" src=\"images/rookiemedal.png\" className=\"medal-icon\" />\n                          <Card.Img className=\"medal-icon\" variant=\"top\" src=\"images/3medal.png\" className=\"medal-icon\" />\n                          <br />\n                          <strong className=\"progressTitle\">Seasoned</strong>\n                        </Card.Text>\n                        :\n                        <Card.Text className=\"medalCard\">\n                          <br />\n                          <Card.Img className=\"medal-icon\" variant=\"top\" src=\"images/rookiemedal.png\" className=\"medal-icon\" />\n                          <br />\n                          <strong className=\"progressTitle\">Rookie</strong>\n                        </Card.Text>\n                }\n                <Card.Text>Highest Level Completed: {highest + \"/12\"}</Card.Text>\n                <Card.Text>Average WPM: {wpm}</Card.Text>\n                <Button className=\"leaderboardButton\" variant=\"primary\" href=\"/leaderboard\">Global Leaderboard</Button>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n            <Row>\n              <Card style={{ width: '45rem' }} >\n                <Card.Header as=\"h5\">🔥Your Top Typing Speeds🔥</Card.Header>\n                <Card.Body>\n                  <Attempts />\n                </Card.Body>\n              </Card>\n            </Row>\n            <br />\n            <br />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default Profile\n","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/WelcomePage.jsx",["118","119","120","121","122"],"import React, { useState } from 'react';\nimport { Container, Jumbotron, Image, Button, Fade } from 'react-bootstrap';\nimport Typing from \"react-typing-animation\";\nimport useSound from 'use-sound';\nimport DelayLink from 'react-delay-link';\nimport \"./WelcomePage.css\";\nimport useApplicationData from '../hooks/useApplicationData';\n\n\nfunction Welcomepage() {\n\n  const playGameSoundUrl = \"./sounds/SuperMarioBros.mp3\";\n\n  const [playGameSound] = useSound(playGameSoundUrl);\n\n  return (\n    <div className=\"welcome-container\">\n      <Jumbotron fluid className=\"container-of-bg\" style={{marginBottom: 0}}>\n        <Container className=\"welcome-text-box\">\n          <h1 className=\"welcome-to-typecraft\">\n            <Typing speed={60}>\n              Welcome to TypeCraft\n            </Typing>\n          </h1>\n          <h2>\n           🔥 10 Levels 🔥\n          </h2>\n          <h2>\n            🔥 30 Seconds Each 🔥\n          </h2>\n          <h2>\n            Do you have what it takes?\n          </h2>\n          <DelayLink delay={3000} to=\"/play\" clickAction={playGameSound} replace={false}>\n            <Button className=\"startGameButton\" variant=\"primary\" size=\"lg\">Play Game</Button>\n          </DelayLink>\n        </Container>\n      </Jumbotron>\n    </div>\n  )\n}\n\nexport default Welcomepage\n\n","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/GameConsole.jsx",["123","124","125","126","127","128","129"],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/hooks/useApplicationData.js",[],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/GameCompleteMsg.jsx",[],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/NavbarTC.jsx",[],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Attempts.jsx",["130","131","132","133"],"import React, { useState, useMemo } from 'react';\nimport { Container, Table, Alert, Button } from 'react-bootstrap';\nimport useApplicationData from \"../hooks/useApplicationData\";\nimport Moment from 'react-moment';\nimport useSound from 'use-sound';\nimport DelayLink from 'react-delay-link';\n\nfunction Attempts() {\n\n  const soundUrl = \"./sounds/SuperMarioBros.mp3\";\n\n  const [play] = useSound(soundUrl);\n\n  const roundTo = require('round-to');\n\n  const { attempts, setAttempts } = useApplicationData()\n\n  for (const attempt of attempts) {\n    attempt.words_per_min=((attempt.words_completed * 60) / attempt.time_taken)\n  }\n\n  const [sortType, setSortType] = useState('words_per_min');\n\n  const currentUser = (localStorage.getItem(\"user_details\") && JSON.parse(localStorage.getItem(\"user_details\"))?.id)\n\n  const sortedUsersId = () => {\n    let result = [];\n    for (let i = 0; i < attempts.length; i++) {\n      result.push(attempts[i].user_id)\n    }\n    return result\n  }\n\n  const currentUserAttempts = useMemo(() => {\n    let result = []\n    for (let attempt of attempts)\n      if (attempt.user_id === currentUser && attempt.passed === true) {\n        result.push(attempt)\n      }\n    return result\n  })\n\n  const sortUserAttempts = currentUserAttempts.sort((a, b) => {\n    return b.words_per_min - a.words_per_min\n  })\n\n  if (sortedUsersId().includes(currentUser)) {\n    return (\n      <div className=\"leaderboard\">\n        <Container className=\"leadercontainer\">\n          <Table striped bordered hover variant=\"dark\">\n            <thead>\n              <tr>\n                <th>Date</th>\n                <th>Level</th>\n                <th>Time Completed</th>\n                <th>Words Per Minute</th>\n              </tr>\n            </thead>\n            <tbody>\n              {sortUserAttempts[0] ? (\n                <tr>\n                <td>\n                  <Moment format='MMMM Do, YYYY'>\n                    {sortUserAttempts[0] && sortUserAttempts[0].attempted_at}\n                  </Moment>\n                </td>\n                <td>{sortUserAttempts[0] && sortUserAttempts[0].level_id}</td>\n                <td>{sortUserAttempts[0] && sortUserAttempts[0].time_taken + \" Seconds\"}</td>\n                <td>{roundTo((sortUserAttempts[0] && sortUserAttempts[0].words_per_min), 2)}</td>\n              </tr>) : null\n              }\n              {sortUserAttempts[1] ? (              \n              <tr>\n                <td>\n                  <Moment format=\"MMMM Do, YYYY\">\n                    {sortUserAttempts[1] && sortUserAttempts[1].attempted_at}\n                  </Moment>\n                </td>\n                <td>{sortUserAttempts[1] && sortUserAttempts[1].level_id}</td>\n                <td>{sortUserAttempts[1] && sortUserAttempts[1].time_taken + \" Seconds\"}</td>\n                <td>{roundTo((sortUserAttempts[1] && sortUserAttempts[1].words_per_min), 2)}</td>\n              </tr>) : null\n              }\n              {sortUserAttempts[2] ? (\n              <tr>\n                <td>\n                  <Moment format=\"MMMM Do, YYYY\">\n                    {sortUserAttempts[2] && sortUserAttempts[2].attempted_at}\n                  </Moment>\n                </td>\n                <td>{sortUserAttempts[2] && sortUserAttempts[2].level_id}</td>\n                <td>{sortUserAttempts[2] && sortUserAttempts[2].time_taken + \" Seconds\"}</td>\n                <td>{roundTo((sortUserAttempts[2] && sortUserAttempts[2].words_per_min), 2)}</td>\n              </tr>) : null\n              }\n              {sortUserAttempts[3] ? (\n              <tr>\n                <td>\n                  <Moment format=\"MMMM Do, YYYY\">\n                    {sortUserAttempts[3] && sortUserAttempts[3].attempted_at}\n                  </Moment>\n                </td>\n                <td>{sortUserAttempts[3] && sortUserAttempts[3].level_id}</td>\n                <td>{sortUserAttempts[3] && sortUserAttempts[3].time_taken + \" Seconds\"}</td>\n                <td>{roundTo((sortUserAttempts[3] && sortUserAttempts[3].words_per_min), 2)}</td>\n              </tr>) : null\n              }\n              {sortUserAttempts[4] ? (\n              <tr>\n                <td>\n                  <Moment format=\"MMMM Do, YYYY\">\n                    {sortUserAttempts[4] && sortUserAttempts[4].attempted_at}\n                  </Moment>\n                </td>\n                <td>{sortUserAttempts[4] && sortUserAttempts[4].level_id}</td>\n                <td>{sortUserAttempts[4] && sortUserAttempts[4].time_taken + \" Seconds\"}</td>\n                <td>{roundTo((sortUserAttempts[4] && sortUserAttempts[4].words_per_min), 2)}</td>\n              </tr>) : null\n              }\n\n            </tbody>\n          </Table>\n          <Alert variant=\"success\">\n        <Alert.Heading>Hey, nice to see you again!</Alert.Heading>\n        <p>\n          Congrats on the rad scores! Looks like you're doing quite well but don't let that stop you. Click on the button below to try and reach even better scores!\n        </p>\n        <hr />\n        <p className=\"mb-0\">\n          <DelayLink delay={3000} to=\"/play\" clickAction={play} replace={false}>\n            <Button variant=\"primary\" size=\"lg\">Play Game</Button>\n          </DelayLink>\n        </p>\n      </Alert>\n        </Container>\n      </div>\n    )\n  } else {\n    return (\n      <Alert variant=\"danger\">\n        <Alert.Heading>Hey, you must be new here!</Alert.Heading>\n        <p>\n          Aww yeah, so it looks like you haven't actually played yet. No worries! Simply click on the button below to play this super awesome game and build up your typing chops!\n        </p>\n        <hr />\n        <p className=\"mb-0\">\n          <DelayLink delay={3000} to=\"/play\" clickAction={play} replace={false}>\n            <Button variant=\"primary\" size=\"lg\">Play Game</Button>\n          </DelayLink>\n        </p>\n      </Alert>\n    )\n  }\n}\n\nexport default Attempts\n","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Chat.jsx",["134","135"],"import io from \"socket.io-client\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./Chat.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useEffect, useState } from \"react\";\nimport moment from \"moment\";\n\nimport TextContainer from './TextContainer';\nimport Messages from './Messages';\nimport InfoBar from './InfoBar';\nimport Input from './Input';\n\nimport './Chat.css';\n\nconst username = JSON.parse(localStorage.getItem(\"user_details\"))?.username\n\nconst socket = io(\"http://localhost:8000\", {\n  transports: [\"websocket\", \"polling\"]\n});\n\nconst Chat = () => {\n\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      socket.emit(\"username\", username);\n    });\n\n    socket.on(\"users\", users => {\n      setUsers(users);\n    });\n\n    socket.on(\"message\", message => {\n      setMessages(messages => [...messages, message]);\n    });\n\n    socket.on(\"connected\", user => {\n      setUsers(users => [...users, user]);\n    });\n\n    socket.on(\"disconnected\", id => {\n      setUsers(users => {\n        return users.filter(user => user.id !== id);\n      });\n    });\n  }, []);\n\n  // const submit = event => {\n  //   event.preventDefault();\n  //   socket.emit(\"send\", message);\n  //   setMessage(\"\");\n  // };\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n\n    if(message) {\n      socket.emit('send', message, () => setMessage(''));\n    }\n  }\n\n  return (\n    <div className=\"outerContainer\">\n      <TextContainer users={users}/>\n      <div className=\"chat-container\">\n          <InfoBar />\n          <Messages messages={messages} name={username} />\n          <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n      </div>\n    </div>\n  );\n\n}\nexport default Chat\n","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/TextContainer.jsx",[],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Messages.jsx",[],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Input.jsx",[],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Message.jsx",[],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/InfoBar.jsx",[],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/PlayerMap.jsx",["136"],"import React, { useState } from 'react'\nimport { GoogleMap, useJsApiLoader, Marker, InfoWindow } from '@react-google-maps/api';\n\nfunction Map() {\n\n  const [ selected, setSelected ] = useState({});\n\n  const center = {\n    lat: 43.6532,\n    lng: -79.3832\n  };\n\n  const containerStyle = {\n    width: '600px',\n    height: '600px',\n  };\n  \n  const onSelect = item => {\n    setSelected(item);\n  }\n\n  const locations = [\n    {\n      name: \"@JSmith\",\n      location: { \n        lat: 43.6532,\n        lng: -79.3832 \n      },\n    },\n    {\n      name: \"@ChuckNorr\",\n      location: { \n        lat: 34.0522,\n        lng: -118.2437\n      },\n    },\n    {\n      name: \"@TFey\",\n      location: { \n        lat: 40.7594,\n        lng: -73.9800\n      },\n    },\n    {\n      name: \"@CChanning\",\n      location: { \n        lat: 45.5017,\n        lng: -73.5673\n      },\n    },\n    {\n      name: \"@CDion\",\n      location: { \n        lat: 45.5020,\n        lng: -73.5670\n      },\n    },\n    {\n      name: \"@WGretzsky\",\n      location: { \n        lat: 43.6535,\n        lng: -79.3835 \n      },\n    },\n    {\n      name: \"@JTrudeau\",\n      location: { \n        lat: 45.4445,\n        lng: -75.6858\n      },\n    },\n    {\n      name: \"@CTatum\",\n      location: { \n        lat: 34.0928,\n        lng: -118.3287\n      },\n    },\n    {\n      name: \"@MMouse\",\n      location: { \n        lat: 28.3852,\n        lng: -81.5639\n      },\n    },\n    {\n      name: \"@CLloyd\",\n      location: { \n        lat: 34.1478,\n        lng: -118.1445\n      },\n    }\n  ];\n\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY\n  })\n\n  const [map, setMap] = React.useState(null)\n\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map)\n  }, [])\n\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null)\n  }, [])\n\n  return isLoaded ? (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={center}\n      zoom={10}\n      onLoad={onLoad}\n      onUnmount={onUnmount}\n    >\n      {\n            locations.map(item => {\n              return (\n              <Marker key={item.name} \n                position={item.location}\n                onClick={() => onSelect(item)}\n              />\n              )\n            })\n         }\n        {\n            selected.location && \n            (\n              <InfoWindow\n              position={selected.location}\n              clickable={true}\n              onCloseClick={() => setSelected({})}\n            >\n              <p>{selected.name}</p>\n            </InfoWindow>\n            )\n         }\n      <></>\n    </GoogleMap>\n  ) : <></>\n}\n\nexport default React.memo(Map)",{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"145","line":3,"column":50,"nodeType":"143","messageId":"144","endLine":3,"endColumn":54},{"ruleId":"141","severity":1,"message":"146","line":21,"column":5,"nodeType":"143","messageId":"144","endLine":21,"endColumn":16},{"ruleId":"141","severity":1,"message":"147","line":22,"column":5,"nodeType":"143","messageId":"144","endLine":22,"endColumn":16},{"ruleId":"141","severity":1,"message":"148","line":23,"column":5,"nodeType":"143","messageId":"144","endLine":23,"endColumn":22},{"ruleId":"141","severity":1,"message":"149","line":24,"column":5,"nodeType":"143","messageId":"144","endLine":24,"endColumn":14},{"ruleId":"141","severity":1,"message":"150","line":25,"column":5,"nodeType":"143","messageId":"144","endLine":25,"endColumn":17},{"ruleId":"141","severity":1,"message":"151","line":8,"column":18,"nodeType":"143","messageId":"144","endLine":8,"endColumn":26},{"ruleId":"141","severity":1,"message":"152","line":10,"column":20,"nodeType":"143","messageId":"144","endLine":10,"endColumn":31},{"ruleId":"141","severity":1,"message":"153","line":7,"column":8,"nodeType":"143","messageId":"144","endLine":7,"endColumn":26},{"ruleId":"154","severity":1,"message":"155","line":42,"column":33,"nodeType":"156","messageId":"157","endLine":42,"endColumn":35},{"ruleId":"158","severity":1,"message":"159","line":45,"column":97,"nodeType":"160","endLine":45,"endColumn":119},{"ruleId":"158","severity":1,"message":"159","line":46,"column":92,"nodeType":"160","endLine":46,"endColumn":114},{"ruleId":"158","severity":1,"message":"159","line":47,"column":92,"nodeType":"160","endLine":47,"endColumn":114},{"ruleId":"158","severity":1,"message":"159","line":48,"column":92,"nodeType":"160","endLine":48,"endColumn":114},{"ruleId":"158","severity":1,"message":"159","line":49,"column":97,"nodeType":"160","endLine":49,"endColumn":119},{"ruleId":"158","severity":1,"message":"159","line":56,"column":99,"nodeType":"160","endLine":56,"endColumn":121},{"ruleId":"158","severity":1,"message":"159","line":57,"column":94,"nodeType":"160","endLine":57,"endColumn":116},{"ruleId":"158","severity":1,"message":"159","line":58,"column":94,"nodeType":"160","endLine":58,"endColumn":116},{"ruleId":"158","severity":1,"message":"159","line":59,"column":94,"nodeType":"160","endLine":59,"endColumn":116},{"ruleId":"158","severity":1,"message":"159","line":66,"column":101,"nodeType":"160","endLine":66,"endColumn":123},{"ruleId":"158","severity":1,"message":"159","line":67,"column":96,"nodeType":"160","endLine":67,"endColumn":118},{"ruleId":"158","severity":1,"message":"159","line":68,"column":96,"nodeType":"160","endLine":68,"endColumn":118},{"ruleId":"158","severity":1,"message":"159","line":75,"column":103,"nodeType":"160","endLine":75,"endColumn":125},{"ruleId":"158","severity":1,"message":"159","line":76,"column":98,"nodeType":"160","endLine":76,"endColumn":120},{"ruleId":"158","severity":1,"message":"159","line":83,"column":103,"nodeType":"160","endLine":83,"endColumn":125},{"ruleId":"141","severity":1,"message":"161","line":2,"column":47,"nodeType":"143","messageId":"144","endLine":2,"endColumn":51},{"ruleId":"141","severity":1,"message":"162","line":12,"column":11,"nodeType":"143","messageId":"144","endLine":12,"endColumn":24},{"ruleId":"141","severity":1,"message":"163","line":18,"column":10,"nodeType":"143","messageId":"144","endLine":18,"endColumn":23},{"ruleId":"141","severity":1,"message":"164","line":20,"column":10,"nodeType":"143","messageId":"144","endLine":20,"endColumn":15},{"ruleId":"141","severity":1,"message":"165","line":20,"column":17,"nodeType":"143","messageId":"144","endLine":20,"endColumn":25},{"ruleId":"141","severity":1,"message":"166","line":1,"column":38,"nodeType":"143","messageId":"144","endLine":1,"endColumn":45},{"ruleId":"141","severity":1,"message":"167","line":11,"column":21,"nodeType":"143","messageId":"144","endLine":11,"endColumn":32},{"ruleId":"141","severity":1,"message":"168","line":11,"column":42,"nodeType":"143","messageId":"144","endLine":11,"endColumn":51},{"ruleId":"169","severity":1,"message":"170","line":147,"column":6,"nodeType":"171","endLine":147,"endColumn":20,"suggestions":"172"},{"ruleId":"169","severity":1,"message":"173","line":173,"column":6,"nodeType":"171","endLine":173,"endColumn":27,"suggestions":"174"},{"ruleId":"169","severity":1,"message":"175","line":200,"column":6,"nodeType":"171","endLine":200,"endColumn":28,"suggestions":"176"},{"ruleId":"141","severity":1,"message":"177","line":203,"column":9,"nodeType":"143","messageId":"144","endLine":203,"endColumn":21},{"ruleId":"141","severity":1,"message":"167","line":16,"column":21,"nodeType":"143","messageId":"144","endLine":16,"endColumn":32},{"ruleId":"141","severity":1,"message":"178","line":22,"column":10,"nodeType":"143","messageId":"144","endLine":22,"endColumn":18},{"ruleId":"141","severity":1,"message":"152","line":22,"column":20,"nodeType":"143","messageId":"144","endLine":22,"endColumn":31},{"ruleId":"169","severity":1,"message":"179","line":34,"column":31,"nodeType":"143","endLine":34,"endColumn":38},{"ruleId":"141","severity":1,"message":"180","line":6,"column":8,"nodeType":"143","messageId":"144","endLine":6,"endColumn":16},{"ruleId":"141","severity":1,"message":"181","line":8,"column":8,"nodeType":"143","messageId":"144","endLine":8,"endColumn":14},{"ruleId":"141","severity":1,"message":"182","line":100,"column":10,"nodeType":"143","messageId":"144","endLine":100,"endColumn":13},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'setContents' is assigned a value but never used.","'gameConsole' is assigned a value but never used.","'updateGameConsole' is assigned a value but never used.","'userInput' is assigned a value but never used.","'setUserInput' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'setSortType' is assigned a value but never used.","'useApplicationData' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Fade' is defined but never used.","'checkLoggedIn' is assigned a value but never used.","'playTypeSound' is assigned a value but never used.","'index' is assigned a value but never used.","'setIndex' is assigned a value but never used.","'useMemo' is defined but never used.","'setAttempts' is assigned a value but never used.","'setLevels' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'giveMeRandomText' and 'intervalId'. Either include them or remove the dependency array.","ArrayExpression",["185"],"React Hook useEffect has missing dependencies: 'currentLevel', 'props.contents', 'totalAvgWpm', and 'typingIn'. Either include them or remove the dependency array.",["186"],"React Hook useEffect has missing dependencies: 'currentLevel', 'giveMeRandomText', 'seconds', 'text', and 'totalAvgWpm'. Either include them or remove the dependency array. You can also do a functional update 'setCurrentLevel(c => ...)' if you only need 'currentLevel' in the 'setCurrentLevel' call.",["187"],"'handleChange' is assigned a value but never used.","'sortType' is assigned a value but never used.","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'ReactDOM' is defined but never used.","'moment' is defined but never used.","'map' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},"Update the dependencies array to be: [currentLevel, giveMeRandomText, intervalId]",{"range":"194","text":"195"},"Update the dependencies array to be: [seconds, intervalId, props.contents, currentLevel, typingIn, totalAvgWpm]",{"range":"196","text":"197"},"Update the dependencies array to be: [typingIn, intervalId, text, seconds, totalAvgWpm, currentLevel, giveMeRandomText]",{"range":"198","text":"199"},[4928,4942],"[currentLevel, giveMeRandomText, intervalId]",[5836,5857],"[seconds, intervalId, props.contents, currentLevel, typingIn, totalAvgWpm]",[6771,6793],"[typingIn, intervalId, text, seconds, totalAvgWpm, currentLevel, giveMeRandomText]"]