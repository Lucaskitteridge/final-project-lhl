[{"/Users/lucas/lighthouse/final-project-lhl/final-project/src/index.js":"1","/Users/lucas/lighthouse/final-project-lhl/final-project/src/App.js":"2","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Register.jsx":"3","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Footer.jsx":"4","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Login.jsx":"5","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Leaderboard.jsx":"6","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Profile.jsx":"7","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/WelcomePage.jsx":"8","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/GameConsole.jsx":"9"},{"size":219,"mtime":1613241334563,"results":"10","hashOfConfig":"11"},{"size":3393,"mtime":1613337903059,"results":"12","hashOfConfig":"11"},{"size":2474,"mtime":1613321349102,"results":"13","hashOfConfig":"11"},{"size":1115,"mtime":1613321349101,"results":"14","hashOfConfig":"11"},{"size":1683,"mtime":1613321349101,"results":"15","hashOfConfig":"11"},{"size":1043,"mtime":1613244884719,"results":"16","hashOfConfig":"11"},{"size":2220,"mtime":1613253346135,"results":"17","hashOfConfig":"11"},{"size":1173,"mtime":1613321349102,"results":"18","hashOfConfig":"11"},{"size":3448,"mtime":1613337835159,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"72v973",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":9,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"/Users/lucas/lighthouse/final-project-lhl/final-project/src/index.js",[],["43","44"],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/App.js",["45"],"import React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n// Import Components\nimport Register from \"./components/Register.jsx\";\nimport Footer from \"./components/Footer.jsx\";\nimport Login from \"./components/Login.jsx\";\nimport Leaderboard from \"./components/Leaderboard.jsx\";\nimport Profile from \"./components/Profile.jsx\";\nimport Welcomepage from \"./components/WelcomePage.jsx\";\nimport GameConsole from \"./components/GameConsole.jsx\";\n\n// Import Bootstrap Components\nimport { Navbar, Nav, Modal, Button, Image, Dropdown, DropdownButton } from 'react-bootstrap';\n\n// Import stylesheets\nimport './App.css';\n\nfunction App() {\n\n  const [showLogin, setShowLogin] = useState(false);\n  const handleCloseLogin = () => setShowLogin(false);\n  const handleShowLogin = () => setShowLogin(true);\n\n  const [showRegister, setShowRegister] = useState(false);\n  const handleCloseRegister = () => setShowRegister(false);\n  const handleShowRegister = () => setShowRegister(true);\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <Navbar sticky=\"top\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n          <Link to=\"/\">\n            <Image href=\"/\" src=\"images/typing-icon.png\" className=\"typecraft-logo\" />\n          </Link>\n          <Navbar.Brand href=\"/\">Typecraft</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n          </Nav>\n          <Nav>\n            <Navbar.Brand>Welcome back, Bob</Navbar.Brand>\n            <Nav.Link onClick={handleShowLogin}>Login</Nav.Link>\n            <Nav.Link onClick={handleShowRegister}>Register</Nav.Link>\n            <Dropdown>\n              <Dropdown.Toggle variant={'dark'} id=\"dropdown-basic\">\n                <Image src=\"images/fox.jpg\" className=\"navbar-avatar\" />\n              </Dropdown.Toggle>\n              <Dropdown.Menu className=\"dropdown-menu-container\">\n                <Dropdown.Item href=\"/profile\">View Profile</Dropdown.Item>\n                <Dropdown.Item href=\"/leaderboard\">View Leaderboard</Dropdown.Item>\n                <Dropdown.Item href=\"/\">Logout</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Nav>\n        </Navbar>\n\n        {/* Modal for Login Form */}\n        <Modal show={showLogin} onHide={handleCloseLogin}>\n          <Modal.Header closeButton>\n            <Modal.Title>Login</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Login />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={handleCloseLogin}>\n              Forgot Username or Password?\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        {/* Modal for Register Form */}\n        <Modal show={showRegister} onHide={handleCloseRegister}>\n          <Modal.Header closeButton>\n            <Modal.Title>Register</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Register />\n          </Modal.Body>\n        </Modal>\n\n\n        <Switch>\n          <Route path=\"/leaderboard\">\n            <Leaderboard />\n          </Route>\n          <Route path=\"/profile\">\n            <Profile />\n          </Route>\n          <Route path=\"/play\">\n            <GameConsole />\n          </Route>\n          <Route path=\"/\">\n            <Welcomepage />\n          </Route>\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\nexport default App;","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Register.jsx",["46","47","48","49"],"import React from 'react'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport Col from 'react-bootstrap/Col'\nimport \"./Register.css\"\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Register() {\n  return (\n    <div className=\"register\">\n      <Form>\n        <Form.Row>\n          <Form.Group as={Col} controlId=\"formGridFirstName\">\n            <Form.Label>First Name</Form.Label>\n            <Form.Control type=\"firstname\" placeholder=\"Enter First Name\" />\n          </Form.Group>\n\n          <Form.Group as={Col} controlId=\"formGridPassword\">\n            <Form.Label>Last Name</Form.Label>\n            <Form.Control type=\"lastname\" placeholder=\"Enter Last Name\" />\n          </Form.Group>\n        </Form.Row>\n\n        <Form.Group controlId=\"formBasicUsername\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control type=\"Username\" placeholder=\"Enter Username\" />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter Email\" />\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Password\" />\n          <Form.Text id=\"passwordHelpBlock\" muted>\n            Your password must be 8-30 characters long, contain letters and numbers, and\n            must not contain spaces, special characters, or emoji.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicConfirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control type=\"confirmpassword\" placeholder=\"Confirm Password\" />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.File id=\"exampleFormControlFile1\" label=\"Avatar\" />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicCheckbox\">\n          <Form.Check type=\"checkbox\" label=\"Accept terms & conditions\" />\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default Register","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Footer.jsx",[],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Login.jsx",[],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Leaderboard.jsx",[],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Profile.jsx",["50"],"import React from 'react';\nimport { Container, Row, Col, Image, Card, Button, ProgressBar } from 'react-bootstrap';\nimport \"./Profile.css\"\n\nfunction Profile() {\n  return (\n    <div className=\"profile\">\n      <Container>\n        <Row>\n          <Col>\n            <Card border=\"secondary\" style={{ width: '18rem' }}>\n              <Card.Img variant=\"top\" src=\"images/sample-avatar.jpg\" className=\"avatar\" />\n              <Card.Body>\n                <Card.Title>Bobby Bob</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">bobthebuilder99</Card.Subtitle>\n                <ProgressBar animated now={70} label=\"70%\" />\n                {/* <Card.Text><i class=\"fas fa-certificate\"></i> Veteran</Card.Text> */}\n                <Card.Text>\n                  <br/>\n                  <Card.Img variant=\"top\" src=\"images/medal-icon.png\" className= \"medal-icon\" />\n                  Veteran\n                </Card.Text>\n                <Card.Text>Highest Level Completed: 4</Card.Text>\n                <Card.Text>Average WPM: 97</Card.Text>\n                <Button variant=\"primary\">Global Leaderboard</Button>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n            <Row>\n              <Card style={{ width: '45rem' }} >\n                <Card.Header as=\"h5\">Edit Profile</Card.Header>\n                <Card.Body>\n                  <Card.Title>Special title treatment</Card.Title>\n                  <Card.Text>Change username</Card.Text>\n                  <Card.Text>Change location</Card.Text>\n                  <Button variant=\"primary\">Go somewhere</Button>\n                </Card.Body>\n              </Card>\n            </Row>\n            <br/>\n            <br/>\n            <Row>\n              <Card style={{ width: '45rem' }} >\n                <Card.Header as=\"h5\">Security</Card.Header>\n                <Card.Body>\n                  <Card.Title>Special title treatment</Card.Title>\n                  <Card.Text>Change password</Card.Text>\n                  <Button variant=\"primary\">Go somewhere</Button>\n                </Card.Body>\n              </Card>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default Profile\n","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/WelcomePage.jsx",[],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/GameConsole.jsx",["51","52","53","54","55","56","57","58","59","60","61"],"import React from 'react';\nimport \"./GameConsole.css\"\nimport Countdown from \"react-countdown\";\nimport { Jumbotron, Button, ProgressBar, Spinner, InputGroup, FormControl } from 'react-bootstrap';\n\n\nfunction GameConsole() {\n\n  const Completionist = () => <span>GameOver</span>;\n\n// Renderer callback with condition\nconst renderer = ({ seconds, completed }) => {\n  if (completed) {\n    postToAttempts(user_id, level_id, paragraph.length, 30, false)\n    // Render a complete state\n      .then( render (<Completionist />)\n        )\n    \n  } else {\n    // Render a countdown\n    return (\n      <span id=\"countdown\">\n        {seconds}\n      </span>\n    );\n  }\n};\n\nReactDOM.render(\n  <Countdown date={Date.now() + 30000} renderer={renderer} />,\n);\n\n  const checkingForMatch = function(textarea, paragraph) {\n  if (document.getElementById('textarea').value === paragraph){\n    stop()\n    const timerValue = document.getElementById('countdown').value\n    .then(\n      postToAttempts(user_id, level_id, paragraph.length, timerValue, true)\n    )\n    .then(//pull data from the database about what level you're on then render the gameplay\n      )\n    }\n  }\n\n  const postToAttempts = function(userId, levelId, wordsCompleted, secondsOnTimer, passOrFail){\n    return pool.query(`\n    INSERT INTO attempts (user_id, level_id, words_completed, time_taken, passed)\n    VALUES($1, $2, $3, $4, $5)\n    RETURNING *;`, [userId, levelId, wordsCompleted, secondsOnTimer, passOrFail])\n  }\n\n  return (\n    <div className=\"gameconsole\">\n      <Jumbotron>\n        <h1>TypeCraft</h1>\n        <>\n          <Spinner animation=\"border\" variant=\"primary\" />\n          <Spinner animation=\"border\" variant=\"secondary\" />\n          <Spinner animation=\"border\" variant=\"success\" />\n          <Spinner animation=\"border\" variant=\"danger\" />\n          <Spinner animation=\"border\" variant=\"warning\" />\n          <Spinner animation=\"border\" variant=\"info\" />\n          <Spinner animation=\"border\" variant=\"light\" />\n          <Spinner animation=\"border\" variant=\"dark\" />\n          <Spinner animation=\"grow\" variant=\"primary\" />\n          <Spinner animation=\"grow\" variant=\"secondary\" />\n          <Spinner animation=\"grow\" variant=\"success\" />\n          <Spinner animation=\"grow\" variant=\"danger\" />\n          <Spinner animation=\"grow\" variant=\"warning\" />\n          <Spinner animation=\"grow\" variant=\"info\" />\n          <Spinner animation=\"grow\" variant=\"light\" />\n          <Spinner animation=\"grow\" variant=\"dark\" />\n        </>\n        <br/><br/><br/>\n        <ProgressBar animated now={45} variant=\"success\" />\n        <br/>\n        <p>\n        Wrinkles everywhere, who was that woman looking back at me from the bathroom mirror? Don’t recognise the face and I haven’t got grey hair, well except for maybe the odd one or two. Is that laughter lines or even more wrinkles? Oh look the start of a moustache, nah that’s got to be somebody else. I’m in the wrong bathroom!\n        </p>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text onKeyUp=\"checkingforMatch()\" >TYPE HERE:</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl as=\"textarea\" aria-label=\"With textarea\" />\n        </InputGroup>\n        <br/>\n        <p>\n          <Button variant=\"primary\">Resume from Level X</Button>\n          <Button variant=\"primary\">Start Game!</Button>\n        </p>\n      </Jumbotron>\n      \n    </div>\n  )\n}\n\nexport default GameConsole\n",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":14,"column":55,"nodeType":"68","messageId":"69","endLine":14,"endColumn":69},{"ruleId":"66","severity":1,"message":"70","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":17},{"ruleId":"66","severity":1,"message":"71","line":5,"column":8,"nodeType":"68","messageId":"69","endLine":5,"endColumn":14},{"ruleId":"66","severity":1,"message":"72","line":6,"column":8,"nodeType":"68","messageId":"69","endLine":6,"endColumn":11},{"ruleId":"66","severity":1,"message":"73","line":7,"column":8,"nodeType":"68","messageId":"69","endLine":7,"endColumn":19},{"ruleId":"66","severity":1,"message":"74","line":2,"column":31,"nodeType":"68","messageId":"69","endLine":2,"endColumn":36},{"ruleId":"75","severity":2,"message":"76","line":14,"column":20,"nodeType":"68","messageId":"77","endLine":14,"endColumn":27},{"ruleId":"75","severity":2,"message":"78","line":14,"column":29,"nodeType":"68","messageId":"77","endLine":14,"endColumn":37},{"ruleId":"75","severity":2,"message":"79","line":14,"column":39,"nodeType":"68","messageId":"77","endLine":14,"endColumn":48},{"ruleId":"75","severity":2,"message":"80","line":16,"column":14,"nodeType":"68","messageId":"77","endLine":16,"endColumn":20},{"ruleId":"75","severity":2,"message":"81","line":29,"column":1,"nodeType":"68","messageId":"77","endLine":29,"endColumn":9},{"ruleId":"66","severity":1,"message":"82","line":33,"column":9,"nodeType":"68","messageId":"69","endLine":33,"endColumn":25},{"ruleId":"83","severity":2,"message":"84","line":35,"column":5,"nodeType":"68","messageId":"85","endLine":35,"endColumn":9},{"ruleId":"75","severity":2,"message":"76","line":38,"column":22,"nodeType":"68","messageId":"77","endLine":38,"endColumn":29},{"ruleId":"75","severity":2,"message":"78","line":38,"column":31,"nodeType":"68","messageId":"77","endLine":38,"endColumn":39},{"ruleId":"86","severity":1,"message":"87","line":38,"column":59,"nodeType":"68","messageId":"88","endLine":38,"endColumn":69},{"ruleId":"75","severity":2,"message":"89","line":46,"column":12,"nodeType":"68","messageId":"77","endLine":46,"endColumn":16},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'DropdownButton' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'NavDropdown' is defined but never used.","'Image' is defined but never used.","no-undef","'user_id' is not defined.","undef","'level_id' is not defined.","'paragraph' is not defined.","'render' is not defined.","'ReactDOM' is not defined.","'checkingForMatch' is assigned a value but never used.","no-restricted-globals","Unexpected use of 'stop'.","defaultMessage","no-use-before-define","'timerValue' was used before it was defined.","usedBeforeDefined","'pool' is not defined.","no-global-assign","no-unsafe-negation"]