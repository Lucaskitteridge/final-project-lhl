[{"/Users/lucas/lighthouse/final-project-lhl/final-project/src/index.js":"1","/Users/lucas/lighthouse/final-project-lhl/final-project/src/App.js":"2","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Register.jsx":"3","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Footer.jsx":"4","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Login.jsx":"5","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Leaderboard.jsx":"6","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Profile.jsx":"7","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/WelcomePage.jsx":"8","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/GameConsole.jsx":"9","/Users/lucas/lighthouse/final-project-lhl/final-project/src/hooks/useApplicationData.js":"10","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/GameCompleteMsg.jsx":"11"},{"size":219,"mtime":1613241334563,"results":"12","hashOfConfig":"13"},{"size":3471,"mtime":1613431190172,"results":"14","hashOfConfig":"13"},{"size":4151,"mtime":1613398916151,"results":"15","hashOfConfig":"13"},{"size":1127,"mtime":1613398916150,"results":"16","hashOfConfig":"13"},{"size":1683,"mtime":1613321349101,"results":"17","hashOfConfig":"13"},{"size":4252,"mtime":1613439307301,"results":"18","hashOfConfig":"13"},{"size":2240,"mtime":1613439307303,"results":"19","hashOfConfig":"13"},{"size":1262,"mtime":1613431190176,"results":"20","hashOfConfig":"13"},{"size":3538,"mtime":1613439275526,"results":"21","hashOfConfig":"13"},{"size":2721,"mtime":1613431636930,"results":"22","hashOfConfig":"13"},{"size":458,"mtime":1613431638491,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"72v973",{"filePath":"27","messages":"28","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/lucas/lighthouse/final-project-lhl/final-project/src/index.js",[],["50","51"],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/App.js",["52","53","54","55","56","57","58","59","60"],"import React, { useState } from 'react';\nimport useApplicationData from \"./hooks/useApplicationData\"\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n// Import Components\nimport Register from \"./components/Register.jsx\";\nimport Footer from \"./components/Footer.jsx\";\nimport Login from \"./components/Login.jsx\";\nimport Leaderboard from \"./components/Leaderboard.jsx\";\nimport Profile from \"./components/Profile.jsx\";\nimport Welcomepage from \"./components/WelcomePage.jsx\";\nimport GameConsole from \"./components/GameConsole.jsx\";\n\n// Import Bootstrap Components\nimport { Navbar, Nav, Modal, Button, Image, Dropdown, DropdownButton } from 'react-bootstrap';\n\n// Import stylesheets\nimport './App.css';\n\nfunction App() {\n\n  const { \n    showLogin, \n    setShowLogin,\n    showRegister,\n    setShowRegister,\n    handleCloseLogin,\n    handleShowLogin,\n    handleCloseRegister,\n    handleShowRegister,\n    contents, \n    setContents,\n    gameConsole,\n    updateGameConsole,\n    userInput,\n    setUserInput\n  } = useApplicationData();\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <Navbar sticky=\"top\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n          <Link to=\"/\">\n            <Image href=\"/\" src=\"images/typing-icon.png\" className=\"typecraft-logo\" />\n          </Link>\n          <Navbar.Brand href=\"/\">Typecraft</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n          </Nav>\n          <Nav>\n            <Navbar.Brand>Welcome back, Bob</Navbar.Brand>\n            <Nav.Link onClick={handleShowLogin}>Login</Nav.Link>\n            <Nav.Link onClick={handleShowRegister}>Register</Nav.Link>\n            <Dropdown>\n              <Dropdown.Toggle variant={'dark'} id=\"dropdown-basic\">\n                <Image src=\"images/fox.jpg\" className=\"navbar-avatar\" />\n              </Dropdown.Toggle>\n              <Dropdown.Menu className=\"dropdown-menu-container\">\n                <Dropdown.Item href=\"/profile\">View Profile</Dropdown.Item>\n                <Dropdown.Item href=\"/leaderboard\">View Leaderboard</Dropdown.Item>\n                <Dropdown.Item href=\"/\">Logout</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Nav>\n        </Navbar>\n\n        {/* Modal for Login Form */}\n        <Modal show={showLogin} onHide={handleCloseLogin}>\n          <Modal.Header closeButton>\n            <Modal.Title>Login</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Login />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={handleCloseLogin}>\n              Forgot Username or Password?\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        {/* Modal for Register Form */}\n        <Modal show={showRegister} onHide={handleCloseRegister}>\n          <Modal.Header closeButton>\n            <Modal.Title>Register</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Register />\n          </Modal.Body>\n        </Modal>\n\n\n        <Switch>\n          <Route path=\"/leaderboard\">\n            <Leaderboard />\n          </Route>\n          <Route path=\"/profile\">\n            <Profile />\n          </Route>\n          <Route path=\"/play\">\n            <GameConsole \n              contents={contents}\n            />\n          </Route>\n          <Route path=\"/\">\n            <Welcomepage />\n          </Route>\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\nexport default App;","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Register.jsx",[],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Footer.jsx",[],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Login.jsx",[],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Leaderboard.jsx",["61","62","63"],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/Profile.jsx",["64"],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/WelcomePage.jsx",[],"/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/GameConsole.jsx",["65","66","67"],"import React, { useState, setState, useEffect } from 'react';\nimport \"./GameConsole.css\"\nimport axios from \"axios\";\nimport { Jumbotron, Button, ProgressBar, Spinner, InputGroup, FormControl, Card } from 'react-bootstrap';\nimport GameCompleteMsg from './GameCompleteMsg';\n\nfunction GameConsole(props) {\n\n  const [seconds, setSeconds] = useState(10);\n\n  useEffect(() => {\n    if (seconds > 0) {\n      setTimeout(() => setSeconds(seconds - 1), 1000);\n    } else {\n      setSeconds('BOOOOM!');\n    }\n  });\n\n  const [typingIn, setTypingIn] = useState(\"\");\n  const [currentLevel, setCurrentLevel] = useState(0);\n\n  const startGame = function() {\n    setCurrentLevel(currentLevel + 1);\n    console.log(currentLevel);\n    // updateGameConsole(currentLevel);\n    // startTimer()\n  }\n\n  //Post request to attempts if both the text areas are the same\n  useEffect(() => {\n    if(typingIn === props.contents[currentLevel - 1]?.content && typingIn !== \"\") {\n      console.log(\"MATCH\")\n      setCurrentLevel(currentLevel + 1)\n      axios.post('http://localhost:3004/api/attempts', {\n        user_id: \"\",\n        level_id: \"\",\n        words_completed: \"\",\n        time_taken: \"\",\n        passed: true\n    })\n      .then(res => {\n        console.log(res);\n      })\n    }\n  }, [typingIn]) \n\n  return (\n    <div className=\"gameconsole\">\n      <Jumbotron>\n        <h1>TypeCraft</h1>\n        <>\n          <Spinner animation=\"border\" variant=\"primary\" />\n          <Spinner animation=\"border\" variant=\"secondary\" />\n          <Spinner animation=\"border\" variant=\"success\" />\n          <Spinner animation=\"border\" variant=\"danger\" />\n          <Spinner animation=\"border\" variant=\"warning\" />\n          <Spinner animation=\"border\" variant=\"info\" />\n          <Spinner animation=\"border\" variant=\"light\" />\n          <Spinner animation=\"border\" variant=\"dark\" />\n          <Spinner animation=\"grow\" variant=\"primary\" />\n          <Spinner animation=\"grow\" variant=\"secondary\" />\n          <Spinner animation=\"grow\" variant=\"success\" />\n          <Spinner animation=\"grow\" variant=\"danger\" />\n          <Spinner animation=\"grow\" variant=\"warning\" />\n          <Spinner animation=\"grow\" variant=\"info\" />\n          <Spinner animation=\"grow\" variant=\"light\" />\n          <Spinner animation=\"grow\" variant=\"dark\" />\n        </>\n        <br /><br /><br />\n        <ProgressBar animated now={45} variant=\"success\" />\n        <br />\n        <Card>\n          <Card.Header>Quote</Card.Header>\n          <Card.Body>\n            <blockquote className=\"blockquote mb-0\">\n              <p>\n                {props.contents[currentLevel - 1]?.content || <GameCompleteMsg />}\n              </p>\n              <footer className=\"blockquote-footer\">\n                Someone famous in <cite title=\"Source Title\">Source Title</cite>\n              </footer>\n            </blockquote>\n          </Card.Body>\n        </Card>\n        <br />\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text id=\"textarea\">TYPE HERE:</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl as=\"textarea\" onChange={(event) => setTypingIn(event.target.value)} id=\"textarea\"aria-label=\"With textarea\" />\n        </InputGroup>\n        <br />\n        <p>\n          <Button variant=\"primary\">\n            Resume from Level X\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={startGame}\n          >\n            Start Level 1!\n          </Button>\n        </p>\n      </Jumbotron>\n\n    </div>\n  )\n}\n\nexport default GameConsole\n","/Users/lucas/lighthouse/final-project-lhl/final-project/src/hooks/useApplicationData.js",["68","69","70"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Prev } from \"react-bootstrap/esm/PageItem\";\n\nexport default function useApplicationData() {\n\n  // All States\n  const [levels, setLevels] = useState([]);\n  const [contents, setContents] = useState([]);\n  const [attempts, setAttempts] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [gameConsole, setGameConsole] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const [newUserDetails, setNewUserDetails] = useState({\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n    avatar: \"\",\n    city: \"\",\n    country: \"\"\n  });\n  const [showLogin, setShowLogin] = useState(false);\n  const [showRegister, setShowRegister] = useState(false);\n\n  // All helper functions\n  const handleCloseLogin = () => setShowLogin(false);\n  const handleShowLogin = () => setShowLogin(true);\n  const handleCloseRegister = () => setShowRegister(false);\n  const handleShowRegister = () => setShowRegister(true);\n\n  const registerUser = () => {\n    axios.post('http://localhost:3004/api/users', {\n      username: newUserDetails.username,\n      first_name: newUserDetails.first_name,\n      last_name: newUserDetails.last_name,\n      email: newUserDetails.email,\n      password: newUserDetails.password,\n      avatar: newUserDetails.avatar,\n      city: newUserDetails.city,\n      country: newUserDetails.country\n    })\n      .then(res => {\n        console.log(res);\n      })\n  }\n\n  // const updateGameConsole = () => {\n  //   console.log(\"YO\")\n  //   setGameConsole(contents[0].content);\n  // }\n\n  // To update state from db on load\n  useEffect(() => {\n    Promise.all([\n      axios.get(\"http://localhost:3004/api/contents\"),\n      axios.get(\"http://localhost:3004/api/levels\"),\n      axios.get( \"http://localhost:3004/api/attempts\"),\n      axios.get(\"http://localhost:3004/api/users\"),\n    ])\n      .then(res => {\n        let contentsArray = res[0].data[\"contents\"];\n        let levelsArray = res[1].data[\"levels\"];\n        let attemptsArray = res[2].data[\"attempts\"];\n        let usersArray = res[3].data[\"users\"];\n        setContents(contentsArray);\n        setLevels(levelsArray);\n        setAttempts(attemptsArray);\n        setUsers(usersArray);\n      })\n      .catch((err) => console.log(err))\n  }, [])\n\n  return {\n    showLogin,\n    setShowLogin,\n    showRegister,\n    setShowRegister,\n    handleCloseLogin,\n    handleShowLogin,\n    handleCloseRegister,\n    handleShowRegister,\n    levels,\n    setLevels,\n    contents,\n    setContents,\n    attempts,\n    setAttempts,\n    users,\n    setUsers,\n    userInput,\n    setUserInput,\n    newUserDetails,\n    setNewUserDetails,\n    registerUser\n  };\n}","/Users/lucas/lighthouse/final-project-lhl/final-project/src/components/GameCompleteMsg.jsx",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"75","severity":1,"message":"79","line":15,"column":55,"nodeType":"77","messageId":"78","endLine":15,"endColumn":69},{"ruleId":"75","severity":1,"message":"80","line":24,"column":5,"nodeType":"77","messageId":"78","endLine":24,"endColumn":17},{"ruleId":"75","severity":1,"message":"81","line":26,"column":5,"nodeType":"77","messageId":"78","endLine":26,"endColumn":20},{"ruleId":"75","severity":1,"message":"82","line":32,"column":5,"nodeType":"77","messageId":"78","endLine":32,"endColumn":16},{"ruleId":"75","severity":1,"message":"83","line":33,"column":5,"nodeType":"77","messageId":"78","endLine":33,"endColumn":16},{"ruleId":"75","severity":1,"message":"84","line":34,"column":5,"nodeType":"77","messageId":"78","endLine":34,"endColumn":22},{"ruleId":"75","severity":1,"message":"85","line":35,"column":5,"nodeType":"77","messageId":"78","endLine":35,"endColumn":14},{"ruleId":"75","severity":1,"message":"86","line":36,"column":5,"nodeType":"77","messageId":"78","endLine":36,"endColumn":17},{"ruleId":"75","severity":1,"message":"87","line":1,"column":27,"nodeType":"77","messageId":"78","endLine":1,"endColumn":36},{"ruleId":"75","severity":1,"message":"88","line":8,"column":18,"nodeType":"77","messageId":"78","endLine":8,"endColumn":26},{"ruleId":"75","severity":1,"message":"89","line":10,"column":20,"nodeType":"77","messageId":"78","endLine":10,"endColumn":31},{"ruleId":"75","severity":1,"message":"90","line":2,"column":31,"nodeType":"77","messageId":"78","endLine":2,"endColumn":36},{"ruleId":"75","severity":1,"message":"91","line":1,"column":27,"nodeType":"77","messageId":"78","endLine":1,"endColumn":35},{"ruleId":"92","severity":1,"message":"93","line":11,"column":3,"nodeType":"77","endLine":11,"endColumn":12,"suggestions":"94"},{"ruleId":"92","severity":1,"message":"95","line":45,"column":6,"nodeType":"96","endLine":45,"endColumn":16,"suggestions":"97"},{"ruleId":"75","severity":1,"message":"98","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":14},{"ruleId":"75","severity":1,"message":"83","line":12,"column":10,"nodeType":"77","messageId":"78","endLine":12,"endColumn":21},{"ruleId":"75","severity":1,"message":"99","line":12,"column":23,"nodeType":"77","messageId":"78","endLine":12,"endColumn":37},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'DropdownButton' is defined but never used.","'setShowLogin' is assigned a value but never used.","'setShowRegister' is assigned a value but never used.","'setContents' is assigned a value but never used.","'gameConsole' is assigned a value but never used.","'updateGameConsole' is assigned a value but never used.","'userInput' is assigned a value but never used.","'setUserInput' is assigned a value but never used.","'useEffect' is defined but never used.","'setUsers' is assigned a value but never used.","'setSortType' is assigned a value but never used.","'Image' is defined but never used.","'setState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setSeconds'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [seconds] as a second argument to the useEffect Hook.",["102"],"React Hook useEffect has missing dependencies: 'currentLevel' and 'props.contents'. Either include them or remove the dependency array. You can also do a functional update 'setCurrentLevel(c => ...)' if you only need 'currentLevel' in the 'setCurrentLevel' call.","ArrayExpression",["103"],"'Prev' is defined but never used.","'setGameConsole' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Add dependencies array: [seconds]",{"range":"108","text":"109"},"Update the dependencies array to be: [currentLevel, props.contents, typingIn]",{"range":"110","text":"111"},[499,499],", [seconds]",[1259,1269],"[currentLevel, props.contents, typingIn]"]