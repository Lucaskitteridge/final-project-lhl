[{"/home/robert/lighthouse/final-project-lhl/final-project/src/index.js":"1","/home/robert/lighthouse/final-project-lhl/final-project/src/App.js":"2","/home/robert/lighthouse/final-project-lhl/final-project/src/components/Register.jsx":"3","/home/robert/lighthouse/final-project-lhl/final-project/src/components/Footer.jsx":"4","/home/robert/lighthouse/final-project-lhl/final-project/src/components/Login.jsx":"5","/home/robert/lighthouse/final-project-lhl/final-project/src/components/Leaderboard.jsx":"6","/home/robert/lighthouse/final-project-lhl/final-project/src/components/Profile.jsx":"7","/home/robert/lighthouse/final-project-lhl/final-project/src/components/WelcomePage.jsx":"8","/home/robert/lighthouse/final-project-lhl/final-project/src/components/GameConsole.jsx":"9","/home/robert/lighthouse/final-project-lhl/final-project/src/hooks/useApplicationData.js":"10"},{"size":219,"mtime":1613239059969,"results":"11","hashOfConfig":"12"},{"size":3607,"mtime":1613427269973,"results":"13","hashOfConfig":"12"},{"size":4151,"mtime":1613407586241,"results":"14","hashOfConfig":"12"},{"size":1127,"mtime":1613352765505,"results":"15","hashOfConfig":"12"},{"size":1683,"mtime":1613259958607,"results":"16","hashOfConfig":"12"},{"size":4237,"mtime":1613429232700,"results":"17","hashOfConfig":"12"},{"size":2220,"mtime":1613249591188,"results":"18","hashOfConfig":"12"},{"size":1262,"mtime":1613427269977,"results":"19","hashOfConfig":"12"},{"size":3741,"mtime":1613427269973,"results":"20","hashOfConfig":"12"},{"size":2749,"mtime":1613427269977,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"pev822",{"filePath":"25","messages":"26","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"/home/robert/lighthouse/final-project-lhl/final-project/src/index.js",[],["47","48"],"/home/robert/lighthouse/final-project-lhl/final-project/src/App.js",["49","50","51","52","53","54"],"import React, { useState } from 'react';\nimport useApplicationData from \"./hooks/useApplicationData\"\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n// Import Components\nimport Register from \"./components/Register.jsx\";\nimport Footer from \"./components/Footer.jsx\";\nimport Login from \"./components/Login.jsx\";\nimport Leaderboard from \"./components/Leaderboard.jsx\";\nimport Profile from \"./components/Profile.jsx\";\nimport Welcomepage from \"./components/WelcomePage.jsx\";\nimport GameConsole from \"./components/GameConsole.jsx\";\n\n// Import Bootstrap Components\nimport { Navbar, Nav, Modal, Button, Image, Dropdown, DropdownButton } from 'react-bootstrap';\n\n// Import stylesheets\nimport './App.css';\n\nfunction App() {\n\n  const { \n    showLogin, \n    setShowLogin,\n    showRegister,\n    setShowRegister,\n    handleCloseLogin,\n    handleShowLogin,\n    handleCloseRegister,\n    handleShowRegister,\n    contents, \n    setContents,\n    gameConsole,\n    updateGameConsole,\n    userInput,\n    setUserInput\n  } = useApplicationData();\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <Navbar sticky=\"top\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n          <Link to=\"/\">\n            <Image href=\"/\" src=\"images/typing-icon.png\" className=\"typecraft-logo\" />\n          </Link>\n          <Navbar.Brand href=\"/\">Typecraft</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n          </Nav>\n          <Nav>\n            <Navbar.Brand>Welcome back, Bob</Navbar.Brand>\n            <Nav.Link onClick={handleShowLogin}>Login</Nav.Link>\n            <Nav.Link onClick={handleShowRegister}>Register</Nav.Link>\n            <Dropdown>\n              <Dropdown.Toggle variant={'dark'} id=\"dropdown-basic\">\n                <Image src=\"images/fox.jpg\" className=\"navbar-avatar\" />\n              </Dropdown.Toggle>\n              <Dropdown.Menu className=\"dropdown-menu-container\">\n                <Dropdown.Item href=\"/profile\">View Profile</Dropdown.Item>\n                <Dropdown.Item href=\"/leaderboard\">View Leaderboard</Dropdown.Item>\n                <Dropdown.Item href=\"/\">Logout</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Nav>\n        </Navbar>\n\n        {/* Modal for Login Form */}\n        <Modal show={showLogin} onHide={handleCloseLogin}>\n          <Modal.Header closeButton>\n            <Modal.Title>Login</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Login />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={handleCloseLogin}>\n              Forgot Username or Password?\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        {/* Modal for Register Form */}\n        <Modal show={showRegister} onHide={handleCloseRegister}>\n          <Modal.Header closeButton>\n            <Modal.Title>Register</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Register />\n          </Modal.Body>\n        </Modal>\n\n\n        <Switch>\n          <Route path=\"/leaderboard\">\n            <Leaderboard />\n          </Route>\n          <Route path=\"/profile\">\n            <Profile />\n          </Route>\n          <Route path=\"/play\">\n            <GameConsole \n              gameConsole={gameConsole}\n              updateGameConsole={updateGameConsole}\n              userInput={userInput}\n              setUserInput={setUserInput}\n            />\n          </Route>\n          <Route path=\"/\">\n            <Welcomepage />\n          </Route>\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\nexport default App;","/home/robert/lighthouse/final-project-lhl/final-project/src/components/Register.jsx",[],"/home/robert/lighthouse/final-project-lhl/final-project/src/components/Footer.jsx",[],"/home/robert/lighthouse/final-project-lhl/final-project/src/components/Login.jsx",[],"/home/robert/lighthouse/final-project-lhl/final-project/src/components/Leaderboard.jsx",["55","56","57"],"/home/robert/lighthouse/final-project-lhl/final-project/src/components/Profile.jsx",["58"],"import React from 'react';\nimport { Container, Row, Col, Image, Card, Button, ProgressBar } from 'react-bootstrap';\nimport \"./Profile.css\"\n\nfunction Profile() {\n  return (\n    <div className=\"profile\">\n      <Container>\n        <Row>\n          <Col>\n            <Card border=\"secondary\" style={{ width: '18rem' }}>\n              <Card.Img variant=\"top\" src=\"images/sample-avatar.jpg\" className=\"avatar\" />\n              <Card.Body>\n                <Card.Title>Bobby Bob</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">bobthebuilder99</Card.Subtitle>\n                <ProgressBar animated now={70} label=\"70%\" />\n                {/* <Card.Text><i class=\"fas fa-certificate\"></i> Veteran</Card.Text> */}\n                <Card.Text>\n                  <br/>\n                  <Card.Img variant=\"top\" src=\"images/medal-icon.png\" className= \"medal-icon\" />\n                  Veteran\n                </Card.Text>\n                <Card.Text>Highest Level Completed: 4</Card.Text>\n                <Card.Text>Average WPM: 97</Card.Text>\n                <Button variant=\"primary\">Global Leaderboard</Button>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n            <Row>\n              <Card style={{ width: '45rem' }} >\n                <Card.Header as=\"h5\">Edit Profile</Card.Header>\n                <Card.Body>\n                  <Card.Title>Special title treatment</Card.Title>\n                  <Card.Text>Change username</Card.Text>\n                  <Card.Text>Change location</Card.Text>\n                  <Button variant=\"primary\">Go somewhere</Button>\n                </Card.Body>\n              </Card>\n            </Row>\n            <br/>\n            <br/>\n            <Row>\n              <Card style={{ width: '45rem' }} >\n                <Card.Header as=\"h5\">Security</Card.Header>\n                <Card.Body>\n                  <Card.Title>Special title treatment</Card.Title>\n                  <Card.Text>Change password</Card.Text>\n                  <Button variant=\"primary\">Go somewhere</Button>\n                </Card.Body>\n              </Card>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default Profile\n","/home/robert/lighthouse/final-project-lhl/final-project/src/components/WelcomePage.jsx",[],"/home/robert/lighthouse/final-project-lhl/final-project/src/components/GameConsole.jsx",["59","60","61","62","63"],"import React, { useState, setState, useEffect } from 'react';\nimport \"./GameConsole.css\"\nimport axios from \"axios\";\nimport { Jumbotron, Button, ProgressBar, Spinner, InputGroup, FormControl, Card } from 'react-bootstrap';\nimport useApplicationData from \"../hooks/useApplicationData\"\n\nfunction GameConsole(props) {\n\n  const [seconds, setSeconds ] =  useState(0);\n\n  // const startTimer = function() { \n  //   useEffect(() => {\n  //     let myInterval = setInterval(() => {\n  //       if (seconds > 0) {\n  //         setSeconds(seconds - 1);\n  //       } else if (seconds === 0) {\n  //         clearInterval(myInterval)\n  //         return Completionist\n  //       }\n  //     }, 1000)\n  //   });\n  //   return (\n  //     <div>\n  //       { seconds === 0 ? null : <h1> {seconds < 10 ?  `0${seconds}` : seconds}</h1> }\n  //     </div>\n  //     )\n  // }\n\n  // const Completionist = () => <span>GameOver</span>;\n\n  const [typingIn, setTypingIn] = useState(\"\");\n\n  const startGame = function() {\n    props.updateGameConsole()\n    // startTimer()\n  }\n\n  const checkingForMatch = function(event) {\n    setTypingIn(event.target.value)\n  }\n  //Post request to attempts if both the text areas are the same\n  useEffect(() => {\n    if(typingIn === props.gameConsole && typingIn !== \"\"){\n      axios.post('http://localhost:3004/api/attempts', {\n        user_id: \"\",\n        level_id: \"\",\n        words_completed: \"\",\n        time_taken: \"\",\n        passed: true\n    })\n      .then(res => {\n        console.log(res);\n      })\n    }\n  }, [typingIn]) \n\n  return (\n    <div className=\"gameconsole\">\n      <Jumbotron>\n        <h1>TypeCraft</h1>\n        <>\n          <Spinner animation=\"border\" variant=\"primary\" />\n          <Spinner animation=\"border\" variant=\"secondary\" />\n          <Spinner animation=\"border\" variant=\"success\" />\n          <Spinner animation=\"border\" variant=\"danger\" />\n          <Spinner animation=\"border\" variant=\"warning\" />\n          <Spinner animation=\"border\" variant=\"info\" />\n          <Spinner animation=\"border\" variant=\"light\" />\n          <Spinner animation=\"border\" variant=\"dark\" />\n          <Spinner animation=\"grow\" variant=\"primary\" />\n          <Spinner animation=\"grow\" variant=\"secondary\" />\n          <Spinner animation=\"grow\" variant=\"success\" />\n          <Spinner animation=\"grow\" variant=\"danger\" />\n          <Spinner animation=\"grow\" variant=\"warning\" />\n          <Spinner animation=\"grow\" variant=\"info\" />\n          <Spinner animation=\"grow\" variant=\"light\" />\n          <Spinner animation=\"grow\" variant=\"dark\" />\n        </>\n        <br /><br /><br />\n        <ProgressBar animated now={45} variant=\"success\" />\n        <br />\n        <Card>\n          <Card.Header>Quote</Card.Header>\n          <Card.Body>\n            <blockquote className=\"blockquote mb-0\">\n              <p>\n                {props.gameConsole}\n              </p>\n              <footer className=\"blockquote-footer\">\n                Someone famous in <cite title=\"Source Title\">Source Title</cite>\n              </footer>\n            </blockquote>\n          </Card.Body>\n        </Card>\n        <br />\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text id=\"textarea\">TYPE HERE:</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl as=\"textarea\" onInput={(event) => checkingForMatch(event)} id=\"textarea\"aria-label=\"With textarea\" />\n        </InputGroup>\n        <br />\n        <p>\n          <Button variant=\"primary\">\n            Resume from Level X\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={startGame}\n          >\n            Start Game!\n          </Button>\n        </p>\n      </Jumbotron>\n\n    </div>\n  )\n}\n\nexport default GameConsole\n","/home/robert/lighthouse/final-project-lhl/final-project/src/hooks/useApplicationData.js",["64"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Prev } from \"react-bootstrap/esm/PageItem\";\n\nexport default function useApplicationData() {\n\n  // All States\n  const [levels, setLevels] = useState([]);\n  const [contents, setContents] = useState([]);\n  const [attempts, setAttempts] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [gameConsole, setGameConsole] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const [newUserDetails, setNewUserDetails] = useState({\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n    avatar: \"\",\n    city: \"\",\n    country: \"\"\n  });\n  const [showLogin, setShowLogin] = useState(false);\n  const [showRegister, setShowRegister] = useState(false);\n\n  // All helper functions\n  const handleCloseLogin = () => setShowLogin(false);\n  const handleShowLogin = () => setShowLogin(true);\n  const handleCloseRegister = () => setShowRegister(false);\n  const handleShowRegister = () => setShowRegister(true);\n\n  const registerUser = () => {\n    axios.post('http://localhost:3004/api/users', {\n      username: newUserDetails.username,\n      first_name: newUserDetails.first_name,\n      last_name: newUserDetails.last_name,\n      email: newUserDetails.email,\n      password: newUserDetails.password,\n      avatar: newUserDetails.avatar,\n      city: newUserDetails.city,\n      country: newUserDetails.country\n    })\n      .then(res => {\n        console.log(res);\n      })\n  }\n\n  const updateGameConsole = () => {\n    console.log(\"YO\")\n    setGameConsole(contents[0].content);\n  }\n\n  // To update state from db on load\n  useEffect(() => {\n    Promise.all([\n      axios.get(\"http://localhost:3004/api/contents\"),\n      axios.get(\"http://localhost:3004/api/levels\"),\n      axios.get( \"http://localhost:3004/api/attempts\"),\n      axios.get(\"http://localhost:3004/api/users\"),\n    ])\n      .then(res => {\n        let contentsArray = res[0].data[\"contents\"];\n        let levelsArray = res[1].data[\"levels\"];\n        let attemptsArray = res[2].data[\"attempts\"];\n        let usersArray = res[3].data[\"users\"];\n        setContents(contentsArray);\n        setLevels(levelsArray);\n        setAttempts(attemptsArray);\n        setUsers(usersArray);\n      })\n      .catch((err) => console.log(err))\n  }, [])\n\n  return {\n    showLogin,\n    setShowLogin,\n    showRegister,\n    setShowRegister,\n    handleCloseLogin,\n    handleShowLogin,\n    handleCloseRegister,\n    handleShowRegister,\n    levels,\n    setLevels,\n    contents,\n    setContents,\n    attempts,\n    setAttempts,\n    users,\n    setUsers,\n    gameConsole,\n    updateGameConsole,\n    userInput,\n    setUserInput,\n    newUserDetails,\n    setNewUserDetails,\n    registerUser\n  };\n}",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"73","line":15,"column":55,"nodeType":"71","messageId":"72","endLine":15,"endColumn":69},{"ruleId":"69","severity":1,"message":"74","line":24,"column":5,"nodeType":"71","messageId":"72","endLine":24,"endColumn":17},{"ruleId":"69","severity":1,"message":"75","line":26,"column":5,"nodeType":"71","messageId":"72","endLine":26,"endColumn":20},{"ruleId":"69","severity":1,"message":"76","line":31,"column":5,"nodeType":"71","messageId":"72","endLine":31,"endColumn":13},{"ruleId":"69","severity":1,"message":"77","line":32,"column":5,"nodeType":"71","messageId":"72","endLine":32,"endColumn":16},{"ruleId":"69","severity":1,"message":"78","line":1,"column":27,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},{"ruleId":"69","severity":1,"message":"79","line":8,"column":18,"nodeType":"71","messageId":"72","endLine":8,"endColumn":26},{"ruleId":"69","severity":1,"message":"80","line":10,"column":20,"nodeType":"71","messageId":"72","endLine":10,"endColumn":31},{"ruleId":"69","severity":1,"message":"81","line":2,"column":31,"nodeType":"71","messageId":"72","endLine":2,"endColumn":36},{"ruleId":"69","severity":1,"message":"82","line":1,"column":27,"nodeType":"71","messageId":"72","endLine":1,"endColumn":35},{"ruleId":"69","severity":1,"message":"83","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":26},{"ruleId":"69","severity":1,"message":"84","line":9,"column":10,"nodeType":"71","messageId":"72","endLine":9,"endColumn":17},{"ruleId":"69","severity":1,"message":"85","line":9,"column":19,"nodeType":"71","messageId":"72","endLine":9,"endColumn":29},{"ruleId":"86","severity":1,"message":"87","line":55,"column":6,"nodeType":"88","endLine":55,"endColumn":16,"suggestions":"89"},{"ruleId":"69","severity":1,"message":"90","line":3,"column":10,"nodeType":"71","messageId":"72","endLine":3,"endColumn":14},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'DropdownButton' is defined but never used.","'setShowLogin' is assigned a value but never used.","'setShowRegister' is assigned a value but never used.","'contents' is assigned a value but never used.","'setContents' is assigned a value but never used.","'useEffect' is defined but never used.","'setUsers' is assigned a value but never used.","'setSortType' is assigned a value but never used.","'Image' is defined but never used.","'setState' is defined but never used.","'useApplicationData' is defined but never used.","'seconds' is assigned a value but never used.","'setSeconds' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.gameConsole'. Either include it or remove the dependency array.","ArrayExpression",["93"],"'Prev' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [props.gameConsole, typingIn]",{"range":"96","text":"97"},[1521,1531],"[props.gameConsole, typingIn]"]